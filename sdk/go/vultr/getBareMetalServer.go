// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vultr

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-vultr/sdk/v2/go/vultr/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Vultr bare metal server.
//
// ## Example Usage
//
// Get the information for a server by `label`:
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-vultr/sdk/v2/go/vultr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vultr.LookupBareMetalServer(ctx, &vultr.LookupBareMetalServerArgs{
//				Filters: []vultr.GetBareMetalServerFilter{
//					{
//						Name: "label",
//						Values: []string{
//							"my-server-label",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBareMetalServer(ctx *pulumi.Context, args *LookupBareMetalServerArgs, opts ...pulumi.InvokeOption) (*LookupBareMetalServerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBareMetalServerResult
	err := ctx.Invoke("vultr:index/getBareMetalServer:getBareMetalServer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBareMetalServer.
type LookupBareMetalServerArgs struct {
	// Query parameters for finding servers.
	Filters []GetBareMetalServerFilter `pulumi:"filters"`
}

// A collection of values returned by getBareMetalServer.
type LookupBareMetalServerResult struct {
	// The server's application ID.
	AppId int `pulumi:"appId"`
	// The number of CPUs available on the server.
	CpuCount int `pulumi:"cpuCount"`
	// The date the server was added to your Vultr account.
	DateCreated string `pulumi:"dateCreated"`
	// The description of the disk(s) on the server.
	Disk     string                     `pulumi:"disk"`
	Features []string                   `pulumi:"features"`
	Filters  []GetBareMetalServerFilter `pulumi:"filters"`
	// The server's IPv4 gateway.
	GatewayV4 string `pulumi:"gatewayV4"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Marketplace ID for this application.
	ImageId string `pulumi:"imageId"`
	// The server's label.
	Label      string `pulumi:"label"`
	MacAddress int    `pulumi:"macAddress"`
	// The server's main IP address.
	MainIp string `pulumi:"mainIp"`
	// The server's IPv4 netmask.
	NetmaskV4 string `pulumi:"netmaskV4"`
	// The operating system of the server.
	Os string `pulumi:"os"`
	// The server's operating system ID.
	OsId int `pulumi:"osId"`
	// The server's plan ID.
	Plan string `pulumi:"plan"`
	// The amount of memory available on the server in MB.
	Ram string `pulumi:"ram"`
	// The region ID of the server.
	Region string `pulumi:"region"`
	// The status of the server's subscription.
	Status string `pulumi:"status"`
	// A list of tags applied to the server.
	Tags          []string `pulumi:"tags"`
	V6MainIp      string   `pulumi:"v6MainIp"`
	V6Network     string   `pulumi:"v6Network"`
	V6NetworkSize int      `pulumi:"v6NetworkSize"`
	// A list of VPC 2.0 IDs attached to the server.
	Vpc2Ids []string `pulumi:"vpc2Ids"`
}

func LookupBareMetalServerOutput(ctx *pulumi.Context, args LookupBareMetalServerOutputArgs, opts ...pulumi.InvokeOption) LookupBareMetalServerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBareMetalServerResult, error) {
			args := v.(LookupBareMetalServerArgs)
			r, err := LookupBareMetalServer(ctx, &args, opts...)
			var s LookupBareMetalServerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBareMetalServerResultOutput)
}

// A collection of arguments for invoking getBareMetalServer.
type LookupBareMetalServerOutputArgs struct {
	// Query parameters for finding servers.
	Filters GetBareMetalServerFilterArrayInput `pulumi:"filters"`
}

func (LookupBareMetalServerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBareMetalServerArgs)(nil)).Elem()
}

// A collection of values returned by getBareMetalServer.
type LookupBareMetalServerResultOutput struct{ *pulumi.OutputState }

func (LookupBareMetalServerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBareMetalServerResult)(nil)).Elem()
}

func (o LookupBareMetalServerResultOutput) ToLookupBareMetalServerResultOutput() LookupBareMetalServerResultOutput {
	return o
}

func (o LookupBareMetalServerResultOutput) ToLookupBareMetalServerResultOutputWithContext(ctx context.Context) LookupBareMetalServerResultOutput {
	return o
}

// The server's application ID.
func (o LookupBareMetalServerResultOutput) AppId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) int { return v.AppId }).(pulumi.IntOutput)
}

// The number of CPUs available on the server.
func (o LookupBareMetalServerResultOutput) CpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) int { return v.CpuCount }).(pulumi.IntOutput)
}

// The date the server was added to your Vultr account.
func (o LookupBareMetalServerResultOutput) DateCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) string { return v.DateCreated }).(pulumi.StringOutput)
}

// The description of the disk(s) on the server.
func (o LookupBareMetalServerResultOutput) Disk() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) string { return v.Disk }).(pulumi.StringOutput)
}

func (o LookupBareMetalServerResultOutput) Features() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) []string { return v.Features }).(pulumi.StringArrayOutput)
}

func (o LookupBareMetalServerResultOutput) Filters() GetBareMetalServerFilterArrayOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) []GetBareMetalServerFilter { return v.Filters }).(GetBareMetalServerFilterArrayOutput)
}

// The server's IPv4 gateway.
func (o LookupBareMetalServerResultOutput) GatewayV4() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) string { return v.GatewayV4 }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBareMetalServerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Marketplace ID for this application.
func (o LookupBareMetalServerResultOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) string { return v.ImageId }).(pulumi.StringOutput)
}

// The server's label.
func (o LookupBareMetalServerResultOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) string { return v.Label }).(pulumi.StringOutput)
}

func (o LookupBareMetalServerResultOutput) MacAddress() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) int { return v.MacAddress }).(pulumi.IntOutput)
}

// The server's main IP address.
func (o LookupBareMetalServerResultOutput) MainIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) string { return v.MainIp }).(pulumi.StringOutput)
}

// The server's IPv4 netmask.
func (o LookupBareMetalServerResultOutput) NetmaskV4() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) string { return v.NetmaskV4 }).(pulumi.StringOutput)
}

// The operating system of the server.
func (o LookupBareMetalServerResultOutput) Os() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) string { return v.Os }).(pulumi.StringOutput)
}

// The server's operating system ID.
func (o LookupBareMetalServerResultOutput) OsId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) int { return v.OsId }).(pulumi.IntOutput)
}

// The server's plan ID.
func (o LookupBareMetalServerResultOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) string { return v.Plan }).(pulumi.StringOutput)
}

// The amount of memory available on the server in MB.
func (o LookupBareMetalServerResultOutput) Ram() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) string { return v.Ram }).(pulumi.StringOutput)
}

// The region ID of the server.
func (o LookupBareMetalServerResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) string { return v.Region }).(pulumi.StringOutput)
}

// The status of the server's subscription.
func (o LookupBareMetalServerResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) string { return v.Status }).(pulumi.StringOutput)
}

// A list of tags applied to the server.
func (o LookupBareMetalServerResultOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o LookupBareMetalServerResultOutput) V6MainIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) string { return v.V6MainIp }).(pulumi.StringOutput)
}

func (o LookupBareMetalServerResultOutput) V6Network() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) string { return v.V6Network }).(pulumi.StringOutput)
}

func (o LookupBareMetalServerResultOutput) V6NetworkSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) int { return v.V6NetworkSize }).(pulumi.IntOutput)
}

// A list of VPC 2.0 IDs attached to the server.
func (o LookupBareMetalServerResultOutput) Vpc2Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBareMetalServerResult) []string { return v.Vpc2Ids }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBareMetalServerResultOutput{})
}
