// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vultr

import (
	"context"
	"reflect"

	"errors"
	"github.com/dirien/pulumi-vultr/sdk/v2/go/vultr/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Vultr database replica resource. This can be used to create, read, modify, and delete managed database read replicas on your Vultr account.
//
// ## Example Usage
//
// Create a new database replica:
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-vultr/sdk/v2/go/vultr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vultr.NewDatabaseReplica(ctx, "myDatabaseReplica", &vultr.DatabaseReplicaArgs{
//				DatabaseId: pulumi.Any(vultr_database.My_database.Id),
//				Region:     pulumi.String("sea"),
//				Label:      pulumi.String("my_database_replica_label"),
//				Tag:        pulumi.String("test tag"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type DatabaseReplica struct {
	pulumi.CustomResourceState

	// The configured time zone for the managed database read replica in TZ database format.
	ClusterTimeZone pulumi.StringOutput `pulumi:"clusterTimeZone"`
	// The database engine of the managed database read replica.
	DatabaseEngine pulumi.StringOutput `pulumi:"databaseEngine"`
	// The database engine version of the managed database read replica.
	DatabaseEngineVersion pulumi.StringOutput `pulumi:"databaseEngineVersion"`
	// The managed database ID you want to attach this replica to.
	DatabaseId pulumi.StringOutput `pulumi:"databaseId"`
	// The date the managed database read replica was added to your Vultr account.
	DateCreated pulumi.StringOutput `pulumi:"dateCreated"`
	// The managed database read replica's default logical database.
	Dbname pulumi.StringOutput `pulumi:"dbname"`
	// The configuration value for the data eviction policy on the managed database read replica (Valkey engine types only).
	EvictionPolicy pulumi.StringOutput `pulumi:"evictionPolicy"`
	// An associated list of FerretDB connection credentials (FerretDB + PostgreSQL engine types only).
	FerretdbCredentials pulumi.StringMapOutput `pulumi:"ferretdbCredentials"`
	// The hostname assigned to the managed database read replica.
	Host pulumi.StringOutput `pulumi:"host"`
	// A label for the managed database read replica.
	Label pulumi.StringOutput `pulumi:"label"`
	// The date of the latest backup available on the managed database read replica.
	LatestBackup pulumi.StringOutput `pulumi:"latestBackup"`
	// The preferred maintenance day of week for the managed database read replica.
	MaintenanceDow pulumi.StringOutput `pulumi:"maintenanceDow"`
	// The preferred maintenance time for the managed database read replica.
	MaintenanceTime pulumi.StringOutput `pulumi:"maintenanceTime"`
	// The configuration value for the long query time (in seconds) on the managed database read replica (MySQL engine types only).
	MysqlLongQueryTime pulumi.IntOutput `pulumi:"mysqlLongQueryTime"`
	// The configuration value for whether primary keys are required on the managed database read replica (MySQL engine types only).
	MysqlRequirePrimaryKey pulumi.BoolOutput `pulumi:"mysqlRequirePrimaryKey"`
	// The configuration value for slow query logging on the managed database read replica (MySQL engine types only).
	MysqlSlowQueryLog pulumi.BoolOutput `pulumi:"mysqlSlowQueryLog"`
	// A list of SQL modes currently configured for the managed database read replica (MySQL engine types only).
	MysqlSqlModes pulumi.StringArrayOutput `pulumi:"mysqlSqlModes"`
	// The password for the managed database read replica's primary admin user.
	Password pulumi.StringOutput `pulumi:"password"`
	// The managed database read replica's plan ID.
	Plan pulumi.StringOutput `pulumi:"plan"`
	// The description of the disk(s) on the managed database read replica.
	PlanDisk pulumi.IntOutput `pulumi:"planDisk"`
	// The amount of memory available on the managed database read replica in MB.
	PlanRam pulumi.IntOutput `pulumi:"planRam"`
	// The number of standby nodes available on the managed database read replica.
	PlanReplicas pulumi.IntOutput `pulumi:"planReplicas"`
	// The number of virtual CPUs available on the managed database read replica.
	PlanVcpus pulumi.IntOutput `pulumi:"planVcpus"`
	// The connection port for the managed database read replica.
	Port pulumi.StringOutput `pulumi:"port"`
	// The public hostname assigned to the managed database read replica (VPC-attached only).
	PublicHost pulumi.StringOutput `pulumi:"publicHost"`
	// The ID of the region that the managed database read replica is to be created in. [See List Regions](https://www.vultr.com/api/#operation/list-regions)
	Region pulumi.StringOutput `pulumi:"region"`
	// The current status of the managed database read replica (poweroff, rebuilding, rebalancing, configuring, running).
	Status pulumi.StringOutput `pulumi:"status"`
	// The tag to assign to the managed database read replica.
	Tag pulumi.StringOutput `pulumi:"tag"`
	// A list of allowed IP addresses for the managed database read replica.
	TrustedIps pulumi.StringArrayOutput `pulumi:"trustedIps"`
	// The primary admin user for the managed database read replica.
	User pulumi.StringOutput `pulumi:"user"`
	// The ID of the VPC Network attached to the managed database read replica.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewDatabaseReplica registers a new resource with the given unique name, arguments, and options.
func NewDatabaseReplica(ctx *pulumi.Context,
	name string, args *DatabaseReplicaArgs, opts ...pulumi.ResourceOption) (*DatabaseReplica, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DatabaseId == nil {
		return nil, errors.New("invalid value for required argument 'DatabaseId'")
	}
	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DatabaseReplica
	err := ctx.RegisterResource("vultr:index/databaseReplica:DatabaseReplica", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseReplica gets an existing DatabaseReplica resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseReplica(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseReplicaState, opts ...pulumi.ResourceOption) (*DatabaseReplica, error) {
	var resource DatabaseReplica
	err := ctx.ReadResource("vultr:index/databaseReplica:DatabaseReplica", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseReplica resources.
type databaseReplicaState struct {
	// The configured time zone for the managed database read replica in TZ database format.
	ClusterTimeZone *string `pulumi:"clusterTimeZone"`
	// The database engine of the managed database read replica.
	DatabaseEngine *string `pulumi:"databaseEngine"`
	// The database engine version of the managed database read replica.
	DatabaseEngineVersion *string `pulumi:"databaseEngineVersion"`
	// The managed database ID you want to attach this replica to.
	DatabaseId *string `pulumi:"databaseId"`
	// The date the managed database read replica was added to your Vultr account.
	DateCreated *string `pulumi:"dateCreated"`
	// The managed database read replica's default logical database.
	Dbname *string `pulumi:"dbname"`
	// The configuration value for the data eviction policy on the managed database read replica (Valkey engine types only).
	EvictionPolicy *string `pulumi:"evictionPolicy"`
	// An associated list of FerretDB connection credentials (FerretDB + PostgreSQL engine types only).
	FerretdbCredentials map[string]string `pulumi:"ferretdbCredentials"`
	// The hostname assigned to the managed database read replica.
	Host *string `pulumi:"host"`
	// A label for the managed database read replica.
	Label *string `pulumi:"label"`
	// The date of the latest backup available on the managed database read replica.
	LatestBackup *string `pulumi:"latestBackup"`
	// The preferred maintenance day of week for the managed database read replica.
	MaintenanceDow *string `pulumi:"maintenanceDow"`
	// The preferred maintenance time for the managed database read replica.
	MaintenanceTime *string `pulumi:"maintenanceTime"`
	// The configuration value for the long query time (in seconds) on the managed database read replica (MySQL engine types only).
	MysqlLongQueryTime *int `pulumi:"mysqlLongQueryTime"`
	// The configuration value for whether primary keys are required on the managed database read replica (MySQL engine types only).
	MysqlRequirePrimaryKey *bool `pulumi:"mysqlRequirePrimaryKey"`
	// The configuration value for slow query logging on the managed database read replica (MySQL engine types only).
	MysqlSlowQueryLog *bool `pulumi:"mysqlSlowQueryLog"`
	// A list of SQL modes currently configured for the managed database read replica (MySQL engine types only).
	MysqlSqlModes []string `pulumi:"mysqlSqlModes"`
	// The password for the managed database read replica's primary admin user.
	Password *string `pulumi:"password"`
	// The managed database read replica's plan ID.
	Plan *string `pulumi:"plan"`
	// The description of the disk(s) on the managed database read replica.
	PlanDisk *int `pulumi:"planDisk"`
	// The amount of memory available on the managed database read replica in MB.
	PlanRam *int `pulumi:"planRam"`
	// The number of standby nodes available on the managed database read replica.
	PlanReplicas *int `pulumi:"planReplicas"`
	// The number of virtual CPUs available on the managed database read replica.
	PlanVcpus *int `pulumi:"planVcpus"`
	// The connection port for the managed database read replica.
	Port *string `pulumi:"port"`
	// The public hostname assigned to the managed database read replica (VPC-attached only).
	PublicHost *string `pulumi:"publicHost"`
	// The ID of the region that the managed database read replica is to be created in. [See List Regions](https://www.vultr.com/api/#operation/list-regions)
	Region *string `pulumi:"region"`
	// The current status of the managed database read replica (poweroff, rebuilding, rebalancing, configuring, running).
	Status *string `pulumi:"status"`
	// The tag to assign to the managed database read replica.
	Tag *string `pulumi:"tag"`
	// A list of allowed IP addresses for the managed database read replica.
	TrustedIps []string `pulumi:"trustedIps"`
	// The primary admin user for the managed database read replica.
	User *string `pulumi:"user"`
	// The ID of the VPC Network attached to the managed database read replica.
	VpcId *string `pulumi:"vpcId"`
}

type DatabaseReplicaState struct {
	// The configured time zone for the managed database read replica in TZ database format.
	ClusterTimeZone pulumi.StringPtrInput
	// The database engine of the managed database read replica.
	DatabaseEngine pulumi.StringPtrInput
	// The database engine version of the managed database read replica.
	DatabaseEngineVersion pulumi.StringPtrInput
	// The managed database ID you want to attach this replica to.
	DatabaseId pulumi.StringPtrInput
	// The date the managed database read replica was added to your Vultr account.
	DateCreated pulumi.StringPtrInput
	// The managed database read replica's default logical database.
	Dbname pulumi.StringPtrInput
	// The configuration value for the data eviction policy on the managed database read replica (Valkey engine types only).
	EvictionPolicy pulumi.StringPtrInput
	// An associated list of FerretDB connection credentials (FerretDB + PostgreSQL engine types only).
	FerretdbCredentials pulumi.StringMapInput
	// The hostname assigned to the managed database read replica.
	Host pulumi.StringPtrInput
	// A label for the managed database read replica.
	Label pulumi.StringPtrInput
	// The date of the latest backup available on the managed database read replica.
	LatestBackup pulumi.StringPtrInput
	// The preferred maintenance day of week for the managed database read replica.
	MaintenanceDow pulumi.StringPtrInput
	// The preferred maintenance time for the managed database read replica.
	MaintenanceTime pulumi.StringPtrInput
	// The configuration value for the long query time (in seconds) on the managed database read replica (MySQL engine types only).
	MysqlLongQueryTime pulumi.IntPtrInput
	// The configuration value for whether primary keys are required on the managed database read replica (MySQL engine types only).
	MysqlRequirePrimaryKey pulumi.BoolPtrInput
	// The configuration value for slow query logging on the managed database read replica (MySQL engine types only).
	MysqlSlowQueryLog pulumi.BoolPtrInput
	// A list of SQL modes currently configured for the managed database read replica (MySQL engine types only).
	MysqlSqlModes pulumi.StringArrayInput
	// The password for the managed database read replica's primary admin user.
	Password pulumi.StringPtrInput
	// The managed database read replica's plan ID.
	Plan pulumi.StringPtrInput
	// The description of the disk(s) on the managed database read replica.
	PlanDisk pulumi.IntPtrInput
	// The amount of memory available on the managed database read replica in MB.
	PlanRam pulumi.IntPtrInput
	// The number of standby nodes available on the managed database read replica.
	PlanReplicas pulumi.IntPtrInput
	// The number of virtual CPUs available on the managed database read replica.
	PlanVcpus pulumi.IntPtrInput
	// The connection port for the managed database read replica.
	Port pulumi.StringPtrInput
	// The public hostname assigned to the managed database read replica (VPC-attached only).
	PublicHost pulumi.StringPtrInput
	// The ID of the region that the managed database read replica is to be created in. [See List Regions](https://www.vultr.com/api/#operation/list-regions)
	Region pulumi.StringPtrInput
	// The current status of the managed database read replica (poweroff, rebuilding, rebalancing, configuring, running).
	Status pulumi.StringPtrInput
	// The tag to assign to the managed database read replica.
	Tag pulumi.StringPtrInput
	// A list of allowed IP addresses for the managed database read replica.
	TrustedIps pulumi.StringArrayInput
	// The primary admin user for the managed database read replica.
	User pulumi.StringPtrInput
	// The ID of the VPC Network attached to the managed database read replica.
	VpcId pulumi.StringPtrInput
}

func (DatabaseReplicaState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseReplicaState)(nil)).Elem()
}

type databaseReplicaArgs struct {
	// The managed database ID you want to attach this replica to.
	DatabaseId string `pulumi:"databaseId"`
	// The configuration value for the data eviction policy on the managed database read replica (Valkey engine types only).
	EvictionPolicy *string `pulumi:"evictionPolicy"`
	// An associated list of FerretDB connection credentials (FerretDB + PostgreSQL engine types only).
	FerretdbCredentials map[string]string `pulumi:"ferretdbCredentials"`
	// A label for the managed database read replica.
	Label string `pulumi:"label"`
	// The configuration value for the long query time (in seconds) on the managed database read replica (MySQL engine types only).
	MysqlLongQueryTime *int `pulumi:"mysqlLongQueryTime"`
	// The configuration value for whether primary keys are required on the managed database read replica (MySQL engine types only).
	MysqlRequirePrimaryKey *bool `pulumi:"mysqlRequirePrimaryKey"`
	// The configuration value for slow query logging on the managed database read replica (MySQL engine types only).
	MysqlSlowQueryLog *bool `pulumi:"mysqlSlowQueryLog"`
	// A list of SQL modes currently configured for the managed database read replica (MySQL engine types only).
	MysqlSqlModes []string `pulumi:"mysqlSqlModes"`
	// The description of the disk(s) on the managed database read replica.
	PlanDisk *int `pulumi:"planDisk"`
	// The public hostname assigned to the managed database read replica (VPC-attached only).
	PublicHost *string `pulumi:"publicHost"`
	// The ID of the region that the managed database read replica is to be created in. [See List Regions](https://www.vultr.com/api/#operation/list-regions)
	Region string `pulumi:"region"`
	// The tag to assign to the managed database read replica.
	Tag *string `pulumi:"tag"`
	// A list of allowed IP addresses for the managed database read replica.
	TrustedIps []string `pulumi:"trustedIps"`
}

// The set of arguments for constructing a DatabaseReplica resource.
type DatabaseReplicaArgs struct {
	// The managed database ID you want to attach this replica to.
	DatabaseId pulumi.StringInput
	// The configuration value for the data eviction policy on the managed database read replica (Valkey engine types only).
	EvictionPolicy pulumi.StringPtrInput
	// An associated list of FerretDB connection credentials (FerretDB + PostgreSQL engine types only).
	FerretdbCredentials pulumi.StringMapInput
	// A label for the managed database read replica.
	Label pulumi.StringInput
	// The configuration value for the long query time (in seconds) on the managed database read replica (MySQL engine types only).
	MysqlLongQueryTime pulumi.IntPtrInput
	// The configuration value for whether primary keys are required on the managed database read replica (MySQL engine types only).
	MysqlRequirePrimaryKey pulumi.BoolPtrInput
	// The configuration value for slow query logging on the managed database read replica (MySQL engine types only).
	MysqlSlowQueryLog pulumi.BoolPtrInput
	// A list of SQL modes currently configured for the managed database read replica (MySQL engine types only).
	MysqlSqlModes pulumi.StringArrayInput
	// The description of the disk(s) on the managed database read replica.
	PlanDisk pulumi.IntPtrInput
	// The public hostname assigned to the managed database read replica (VPC-attached only).
	PublicHost pulumi.StringPtrInput
	// The ID of the region that the managed database read replica is to be created in. [See List Regions](https://www.vultr.com/api/#operation/list-regions)
	Region pulumi.StringInput
	// The tag to assign to the managed database read replica.
	Tag pulumi.StringPtrInput
	// A list of allowed IP addresses for the managed database read replica.
	TrustedIps pulumi.StringArrayInput
}

func (DatabaseReplicaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseReplicaArgs)(nil)).Elem()
}

type DatabaseReplicaInput interface {
	pulumi.Input

	ToDatabaseReplicaOutput() DatabaseReplicaOutput
	ToDatabaseReplicaOutputWithContext(ctx context.Context) DatabaseReplicaOutput
}

func (*DatabaseReplica) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseReplica)(nil)).Elem()
}

func (i *DatabaseReplica) ToDatabaseReplicaOutput() DatabaseReplicaOutput {
	return i.ToDatabaseReplicaOutputWithContext(context.Background())
}

func (i *DatabaseReplica) ToDatabaseReplicaOutputWithContext(ctx context.Context) DatabaseReplicaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseReplicaOutput)
}

// DatabaseReplicaArrayInput is an input type that accepts DatabaseReplicaArray and DatabaseReplicaArrayOutput values.
// You can construct a concrete instance of `DatabaseReplicaArrayInput` via:
//
//	DatabaseReplicaArray{ DatabaseReplicaArgs{...} }
type DatabaseReplicaArrayInput interface {
	pulumi.Input

	ToDatabaseReplicaArrayOutput() DatabaseReplicaArrayOutput
	ToDatabaseReplicaArrayOutputWithContext(context.Context) DatabaseReplicaArrayOutput
}

type DatabaseReplicaArray []DatabaseReplicaInput

func (DatabaseReplicaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseReplica)(nil)).Elem()
}

func (i DatabaseReplicaArray) ToDatabaseReplicaArrayOutput() DatabaseReplicaArrayOutput {
	return i.ToDatabaseReplicaArrayOutputWithContext(context.Background())
}

func (i DatabaseReplicaArray) ToDatabaseReplicaArrayOutputWithContext(ctx context.Context) DatabaseReplicaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseReplicaArrayOutput)
}

// DatabaseReplicaMapInput is an input type that accepts DatabaseReplicaMap and DatabaseReplicaMapOutput values.
// You can construct a concrete instance of `DatabaseReplicaMapInput` via:
//
//	DatabaseReplicaMap{ "key": DatabaseReplicaArgs{...} }
type DatabaseReplicaMapInput interface {
	pulumi.Input

	ToDatabaseReplicaMapOutput() DatabaseReplicaMapOutput
	ToDatabaseReplicaMapOutputWithContext(context.Context) DatabaseReplicaMapOutput
}

type DatabaseReplicaMap map[string]DatabaseReplicaInput

func (DatabaseReplicaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseReplica)(nil)).Elem()
}

func (i DatabaseReplicaMap) ToDatabaseReplicaMapOutput() DatabaseReplicaMapOutput {
	return i.ToDatabaseReplicaMapOutputWithContext(context.Background())
}

func (i DatabaseReplicaMap) ToDatabaseReplicaMapOutputWithContext(ctx context.Context) DatabaseReplicaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseReplicaMapOutput)
}

type DatabaseReplicaOutput struct{ *pulumi.OutputState }

func (DatabaseReplicaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseReplica)(nil)).Elem()
}

func (o DatabaseReplicaOutput) ToDatabaseReplicaOutput() DatabaseReplicaOutput {
	return o
}

func (o DatabaseReplicaOutput) ToDatabaseReplicaOutputWithContext(ctx context.Context) DatabaseReplicaOutput {
	return o
}

// The configured time zone for the managed database read replica in TZ database format.
func (o DatabaseReplicaOutput) ClusterTimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.ClusterTimeZone }).(pulumi.StringOutput)
}

// The database engine of the managed database read replica.
func (o DatabaseReplicaOutput) DatabaseEngine() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.DatabaseEngine }).(pulumi.StringOutput)
}

// The database engine version of the managed database read replica.
func (o DatabaseReplicaOutput) DatabaseEngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.DatabaseEngineVersion }).(pulumi.StringOutput)
}

// The managed database ID you want to attach this replica to.
func (o DatabaseReplicaOutput) DatabaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.DatabaseId }).(pulumi.StringOutput)
}

// The date the managed database read replica was added to your Vultr account.
func (o DatabaseReplicaOutput) DateCreated() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.DateCreated }).(pulumi.StringOutput)
}

// The managed database read replica's default logical database.
func (o DatabaseReplicaOutput) Dbname() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.Dbname }).(pulumi.StringOutput)
}

// The configuration value for the data eviction policy on the managed database read replica (Valkey engine types only).
func (o DatabaseReplicaOutput) EvictionPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.EvictionPolicy }).(pulumi.StringOutput)
}

// An associated list of FerretDB connection credentials (FerretDB + PostgreSQL engine types only).
func (o DatabaseReplicaOutput) FerretdbCredentials() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringMapOutput { return v.FerretdbCredentials }).(pulumi.StringMapOutput)
}

// The hostname assigned to the managed database read replica.
func (o DatabaseReplicaOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.Host }).(pulumi.StringOutput)
}

// A label for the managed database read replica.
func (o DatabaseReplicaOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.Label }).(pulumi.StringOutput)
}

// The date of the latest backup available on the managed database read replica.
func (o DatabaseReplicaOutput) LatestBackup() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.LatestBackup }).(pulumi.StringOutput)
}

// The preferred maintenance day of week for the managed database read replica.
func (o DatabaseReplicaOutput) MaintenanceDow() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.MaintenanceDow }).(pulumi.StringOutput)
}

// The preferred maintenance time for the managed database read replica.
func (o DatabaseReplicaOutput) MaintenanceTime() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.MaintenanceTime }).(pulumi.StringOutput)
}

// The configuration value for the long query time (in seconds) on the managed database read replica (MySQL engine types only).
func (o DatabaseReplicaOutput) MysqlLongQueryTime() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.IntOutput { return v.MysqlLongQueryTime }).(pulumi.IntOutput)
}

// The configuration value for whether primary keys are required on the managed database read replica (MySQL engine types only).
func (o DatabaseReplicaOutput) MysqlRequirePrimaryKey() pulumi.BoolOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.BoolOutput { return v.MysqlRequirePrimaryKey }).(pulumi.BoolOutput)
}

// The configuration value for slow query logging on the managed database read replica (MySQL engine types only).
func (o DatabaseReplicaOutput) MysqlSlowQueryLog() pulumi.BoolOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.BoolOutput { return v.MysqlSlowQueryLog }).(pulumi.BoolOutput)
}

// A list of SQL modes currently configured for the managed database read replica (MySQL engine types only).
func (o DatabaseReplicaOutput) MysqlSqlModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringArrayOutput { return v.MysqlSqlModes }).(pulumi.StringArrayOutput)
}

// The password for the managed database read replica's primary admin user.
func (o DatabaseReplicaOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// The managed database read replica's plan ID.
func (o DatabaseReplicaOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.Plan }).(pulumi.StringOutput)
}

// The description of the disk(s) on the managed database read replica.
func (o DatabaseReplicaOutput) PlanDisk() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.IntOutput { return v.PlanDisk }).(pulumi.IntOutput)
}

// The amount of memory available on the managed database read replica in MB.
func (o DatabaseReplicaOutput) PlanRam() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.IntOutput { return v.PlanRam }).(pulumi.IntOutput)
}

// The number of standby nodes available on the managed database read replica.
func (o DatabaseReplicaOutput) PlanReplicas() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.IntOutput { return v.PlanReplicas }).(pulumi.IntOutput)
}

// The number of virtual CPUs available on the managed database read replica.
func (o DatabaseReplicaOutput) PlanVcpus() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.IntOutput { return v.PlanVcpus }).(pulumi.IntOutput)
}

// The connection port for the managed database read replica.
func (o DatabaseReplicaOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.Port }).(pulumi.StringOutput)
}

// The public hostname assigned to the managed database read replica (VPC-attached only).
func (o DatabaseReplicaOutput) PublicHost() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.PublicHost }).(pulumi.StringOutput)
}

// The ID of the region that the managed database read replica is to be created in. [See List Regions](https://www.vultr.com/api/#operation/list-regions)
func (o DatabaseReplicaOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The current status of the managed database read replica (poweroff, rebuilding, rebalancing, configuring, running).
func (o DatabaseReplicaOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The tag to assign to the managed database read replica.
func (o DatabaseReplicaOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.Tag }).(pulumi.StringOutput)
}

// A list of allowed IP addresses for the managed database read replica.
func (o DatabaseReplicaOutput) TrustedIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringArrayOutput { return v.TrustedIps }).(pulumi.StringArrayOutput)
}

// The primary admin user for the managed database read replica.
func (o DatabaseReplicaOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.User }).(pulumi.StringOutput)
}

// The ID of the VPC Network attached to the managed database read replica.
func (o DatabaseReplicaOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseReplica) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type DatabaseReplicaArrayOutput struct{ *pulumi.OutputState }

func (DatabaseReplicaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseReplica)(nil)).Elem()
}

func (o DatabaseReplicaArrayOutput) ToDatabaseReplicaArrayOutput() DatabaseReplicaArrayOutput {
	return o
}

func (o DatabaseReplicaArrayOutput) ToDatabaseReplicaArrayOutputWithContext(ctx context.Context) DatabaseReplicaArrayOutput {
	return o
}

func (o DatabaseReplicaArrayOutput) Index(i pulumi.IntInput) DatabaseReplicaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DatabaseReplica {
		return vs[0].([]*DatabaseReplica)[vs[1].(int)]
	}).(DatabaseReplicaOutput)
}

type DatabaseReplicaMapOutput struct{ *pulumi.OutputState }

func (DatabaseReplicaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseReplica)(nil)).Elem()
}

func (o DatabaseReplicaMapOutput) ToDatabaseReplicaMapOutput() DatabaseReplicaMapOutput {
	return o
}

func (o DatabaseReplicaMapOutput) ToDatabaseReplicaMapOutputWithContext(ctx context.Context) DatabaseReplicaMapOutput {
	return o
}

func (o DatabaseReplicaMapOutput) MapIndex(k pulumi.StringInput) DatabaseReplicaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DatabaseReplica {
		return vs[0].(map[string]*DatabaseReplica)[vs[1].(string)]
	}).(DatabaseReplicaOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseReplicaInput)(nil)).Elem(), &DatabaseReplica{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseReplicaArrayInput)(nil)).Elem(), DatabaseReplicaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseReplicaMapInput)(nil)).Elem(), DatabaseReplicaMap{})
	pulumi.RegisterOutputType(DatabaseReplicaOutput{})
	pulumi.RegisterOutputType(DatabaseReplicaArrayOutput{})
	pulumi.RegisterOutputType(DatabaseReplicaMapOutput{})
}
