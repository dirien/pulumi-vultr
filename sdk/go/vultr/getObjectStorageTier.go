// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vultr

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-vultr/sdk/v2/go/vultr/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about Object Storage tiers on Vultr.
//
// ## Example Usage
//
// Get the information for an object storage tier by `slug`:
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-vultr/sdk/v2/go/vultr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vultr.GetObjectStorageTier(ctx, &vultr.GetObjectStorageTierArgs{
//				Filters: []vultr.GetObjectStorageTierFilter{
//					{
//						Name: "slug",
//						Values: []string{
//							"tier_010k_5000m",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetObjectStorageTier(ctx *pulumi.Context, args *GetObjectStorageTierArgs, opts ...pulumi.InvokeOption) (*GetObjectStorageTierResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetObjectStorageTierResult
	err := ctx.Invoke("vultr:index/getObjectStorageTier:getObjectStorageTier", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getObjectStorageTier.
type GetObjectStorageTierArgs struct {
	// Query parameters for finding operating systems.
	Filters []GetObjectStorageTierFilter `pulumi:"filters"`
}

// A collection of values returned by getObjectStorageTier.
type GetObjectStorageTierResult struct {
	Filters []GetObjectStorageTierFilter `pulumi:"filters"`
	// The identifying tier ID.
	Id int `pulumi:"id"`
	// A list of locations/clusters where the tier is available.
	Locations []GetObjectStorageTierLocation `pulumi:"locations"`
	// The monthly cost for the tier.
	Price int `pulumi:"price"`
	// The byte-per-second rate limit in the tier.
	RateLimitBytes int `pulumi:"rateLimitBytes"`
	// The operations-per-second rate limit in the tier.
	RateLimitOperations int `pulumi:"rateLimitOperations"`
	// The unique name for the tier.
	Slug string `pulumi:"slug"`
}

func GetObjectStorageTierOutput(ctx *pulumi.Context, args GetObjectStorageTierOutputArgs, opts ...pulumi.InvokeOption) GetObjectStorageTierResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetObjectStorageTierResultOutput, error) {
			args := v.(GetObjectStorageTierArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("vultr:index/getObjectStorageTier:getObjectStorageTier", args, GetObjectStorageTierResultOutput{}, options).(GetObjectStorageTierResultOutput), nil
		}).(GetObjectStorageTierResultOutput)
}

// A collection of arguments for invoking getObjectStorageTier.
type GetObjectStorageTierOutputArgs struct {
	// Query parameters for finding operating systems.
	Filters GetObjectStorageTierFilterArrayInput `pulumi:"filters"`
}

func (GetObjectStorageTierOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObjectStorageTierArgs)(nil)).Elem()
}

// A collection of values returned by getObjectStorageTier.
type GetObjectStorageTierResultOutput struct{ *pulumi.OutputState }

func (GetObjectStorageTierResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetObjectStorageTierResult)(nil)).Elem()
}

func (o GetObjectStorageTierResultOutput) ToGetObjectStorageTierResultOutput() GetObjectStorageTierResultOutput {
	return o
}

func (o GetObjectStorageTierResultOutput) ToGetObjectStorageTierResultOutputWithContext(ctx context.Context) GetObjectStorageTierResultOutput {
	return o
}

func (o GetObjectStorageTierResultOutput) Filters() GetObjectStorageTierFilterArrayOutput {
	return o.ApplyT(func(v GetObjectStorageTierResult) []GetObjectStorageTierFilter { return v.Filters }).(GetObjectStorageTierFilterArrayOutput)
}

// The identifying tier ID.
func (o GetObjectStorageTierResultOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetObjectStorageTierResult) int { return v.Id }).(pulumi.IntOutput)
}

// A list of locations/clusters where the tier is available.
func (o GetObjectStorageTierResultOutput) Locations() GetObjectStorageTierLocationArrayOutput {
	return o.ApplyT(func(v GetObjectStorageTierResult) []GetObjectStorageTierLocation { return v.Locations }).(GetObjectStorageTierLocationArrayOutput)
}

// The monthly cost for the tier.
func (o GetObjectStorageTierResultOutput) Price() pulumi.IntOutput {
	return o.ApplyT(func(v GetObjectStorageTierResult) int { return v.Price }).(pulumi.IntOutput)
}

// The byte-per-second rate limit in the tier.
func (o GetObjectStorageTierResultOutput) RateLimitBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetObjectStorageTierResult) int { return v.RateLimitBytes }).(pulumi.IntOutput)
}

// The operations-per-second rate limit in the tier.
func (o GetObjectStorageTierResultOutput) RateLimitOperations() pulumi.IntOutput {
	return o.ApplyT(func(v GetObjectStorageTierResult) int { return v.RateLimitOperations }).(pulumi.IntOutput)
}

// The unique name for the tier.
func (o GetObjectStorageTierResultOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetObjectStorageTierResult) string { return v.Slug }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetObjectStorageTierResultOutput{})
}
