// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vultr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Vultr snapshot.
//
// ## Example Usage
//
// Get the information for a snapshot by `description`:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-vultr/sdk/go/vultr"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vultr.LookupSnapshot(ctx, &vultr.LookupSnapshotArgs{
//				Filters: []vultr.GetSnapshotFilter{
//					{
//						Name: "description",
//						Values: []string{
//							"my-snapshot-description",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSnapshot(ctx *pulumi.Context, args *LookupSnapshotArgs, opts ...pulumi.InvokeOption) (*LookupSnapshotResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupSnapshotResult
	err := ctx.Invoke("vultr:index/getSnapshot:getSnapshot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSnapshot.
type LookupSnapshotArgs struct {
	// Query parameters for finding snapshots.
	Filters []GetSnapshotFilter `pulumi:"filters"`
}

// A collection of values returned by getSnapshot.
type LookupSnapshotResult struct {
	// The application ID of the snapshot.
	AppId int `pulumi:"appId"`
	// The date the snapshot was added to your Vultr account.
	DateCreated string `pulumi:"dateCreated"`
	// The description of the snapshot.
	Description string              `pulumi:"description"`
	Filters     []GetSnapshotFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The operating system ID of the snapshot.
	OsId int `pulumi:"osId"`
	// The size of the snapshot in bytes.
	Size int `pulumi:"size"`
	// The status of the snapshot.
	Status string `pulumi:"status"`
}

func LookupSnapshotOutput(ctx *pulumi.Context, args LookupSnapshotOutputArgs, opts ...pulumi.InvokeOption) LookupSnapshotResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSnapshotResult, error) {
			args := v.(LookupSnapshotArgs)
			r, err := LookupSnapshot(ctx, &args, opts...)
			var s LookupSnapshotResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSnapshotResultOutput)
}

// A collection of arguments for invoking getSnapshot.
type LookupSnapshotOutputArgs struct {
	// Query parameters for finding snapshots.
	Filters GetSnapshotFilterArrayInput `pulumi:"filters"`
}

func (LookupSnapshotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnapshotArgs)(nil)).Elem()
}

// A collection of values returned by getSnapshot.
type LookupSnapshotResultOutput struct{ *pulumi.OutputState }

func (LookupSnapshotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSnapshotResult)(nil)).Elem()
}

func (o LookupSnapshotResultOutput) ToLookupSnapshotResultOutput() LookupSnapshotResultOutput {
	return o
}

func (o LookupSnapshotResultOutput) ToLookupSnapshotResultOutputWithContext(ctx context.Context) LookupSnapshotResultOutput {
	return o
}

// The application ID of the snapshot.
func (o LookupSnapshotResultOutput) AppId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSnapshotResult) int { return v.AppId }).(pulumi.IntOutput)
}

// The date the snapshot was added to your Vultr account.
func (o LookupSnapshotResultOutput) DateCreated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.DateCreated }).(pulumi.StringOutput)
}

// The description of the snapshot.
func (o LookupSnapshotResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupSnapshotResultOutput) Filters() GetSnapshotFilterArrayOutput {
	return o.ApplyT(func(v LookupSnapshotResult) []GetSnapshotFilter { return v.Filters }).(GetSnapshotFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSnapshotResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.Id }).(pulumi.StringOutput)
}

// The operating system ID of the snapshot.
func (o LookupSnapshotResultOutput) OsId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSnapshotResult) int { return v.OsId }).(pulumi.IntOutput)
}

// The size of the snapshot in bytes.
func (o LookupSnapshotResultOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v LookupSnapshotResult) int { return v.Size }).(pulumi.IntOutput)
}

// The status of the snapshot.
func (o LookupSnapshotResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSnapshotResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSnapshotResultOutput{})
}
