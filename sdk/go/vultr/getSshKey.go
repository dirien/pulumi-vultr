// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vultr

import (
	"context"
	"reflect"

	"github.com/dirien/pulumi-vultr/sdk/v2/go/vultr/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Vultr SSH key. This data source provides the name, public SSH key, and the creation date for your Vultr SSH key.
//
// ## Example Usage
//
// Get the information for an SSH key by `name`:
//
// ```go
// package main
//
// import (
//
//	"github.com/dirien/pulumi-vultr/sdk/v2/go/vultr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vultr.GetSshKey(ctx, &vultr.GetSshKeyArgs{
//				Filters: []vultr.GetSshKeyFilter{
//					{
//						Name: "name",
//						Values: []string{
//							"my-ssh-key-name",
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSshKey(ctx *pulumi.Context, args *GetSshKeyArgs, opts ...pulumi.InvokeOption) (*GetSshKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSshKeyResult
	err := ctx.Invoke("vultr:index/getSshKey:getSshKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSshKey.
type GetSshKeyArgs struct {
	// Query parameters for finding SSH keys.
	Filters []GetSshKeyFilter `pulumi:"filters"`
}

// A collection of values returned by getSshKey.
type GetSshKeyResult struct {
	// The date the SSH key was added to your Vultr account.
	DateCreated string            `pulumi:"dateCreated"`
	Filters     []GetSshKeyFilter `pulumi:"filters"`
	// The ID of the SSH key.
	Id string `pulumi:"id"`
	// The name of the SSH key.
	Name string `pulumi:"name"`
	// The public SSH key.
	SshKey string `pulumi:"sshKey"`
}

func GetSshKeyOutput(ctx *pulumi.Context, args GetSshKeyOutputArgs, opts ...pulumi.InvokeOption) GetSshKeyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSshKeyResultOutput, error) {
			args := v.(GetSshKeyArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetSshKeyResult
			secret, err := ctx.InvokePackageRaw("vultr:index/getSshKey:getSshKey", args, &rv, "", opts...)
			if err != nil {
				return GetSshKeyResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetSshKeyResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetSshKeyResultOutput), nil
			}
			return output, nil
		}).(GetSshKeyResultOutput)
}

// A collection of arguments for invoking getSshKey.
type GetSshKeyOutputArgs struct {
	// Query parameters for finding SSH keys.
	Filters GetSshKeyFilterArrayInput `pulumi:"filters"`
}

func (GetSshKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSshKeyArgs)(nil)).Elem()
}

// A collection of values returned by getSshKey.
type GetSshKeyResultOutput struct{ *pulumi.OutputState }

func (GetSshKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSshKeyResult)(nil)).Elem()
}

func (o GetSshKeyResultOutput) ToGetSshKeyResultOutput() GetSshKeyResultOutput {
	return o
}

func (o GetSshKeyResultOutput) ToGetSshKeyResultOutputWithContext(ctx context.Context) GetSshKeyResultOutput {
	return o
}

// The date the SSH key was added to your Vultr account.
func (o GetSshKeyResultOutput) DateCreated() pulumi.StringOutput {
	return o.ApplyT(func(v GetSshKeyResult) string { return v.DateCreated }).(pulumi.StringOutput)
}

func (o GetSshKeyResultOutput) Filters() GetSshKeyFilterArrayOutput {
	return o.ApplyT(func(v GetSshKeyResult) []GetSshKeyFilter { return v.Filters }).(GetSshKeyFilterArrayOutput)
}

// The ID of the SSH key.
func (o GetSshKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSshKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the SSH key.
func (o GetSshKeyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSshKeyResult) string { return v.Name }).(pulumi.StringOutput)
}

// The public SSH key.
func (o GetSshKeyResultOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSshKeyResult) string { return v.SshKey }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSshKeyResultOutput{})
}
