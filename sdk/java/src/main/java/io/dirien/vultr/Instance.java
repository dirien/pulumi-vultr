// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.vultr;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.dirien.vultr.InstanceArgs;
import io.dirien.vultr.Utilities;
import io.dirien.vultr.inputs.InstanceState;
import io.dirien.vultr.outputs.InstanceBackupsSchedule;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Vultr instance resource. This can be used to create, read, modify, and delete instances on your Vultr account.
 * 
 * ## Example Usage
 * 
 * Create a new instance:
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vultr.Instance;
 * import com.pulumi.vultr.InstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myInstance = new Instance(&#34;myInstance&#34;, InstanceArgs.builder()        
 *             .osId(167)
 *             .plan(&#34;vc2-1c-1gb&#34;)
 *             .region(&#34;sea&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * Create a new instance with options:
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vultr.Instance;
 * import com.pulumi.vultr.InstanceArgs;
 * import com.pulumi.vultr.inputs.InstanceBackupsScheduleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myInstance = new Instance(&#34;myInstance&#34;, InstanceArgs.builder()        
 *             .activationEmail(false)
 *             .backups(&#34;enabled&#34;)
 *             .backupsSchedule(InstanceBackupsScheduleArgs.builder()
 *                 .type(&#34;daily&#34;)
 *                 .build())
 *             .ddosProtection(true)
 *             .enableIpv6(true)
 *             .hostname(&#34;my-instance-hostname&#34;)
 *             .label(&#34;my-instance-label&#34;)
 *             .osId(167)
 *             .plan(&#34;vc2-1c-1gb&#34;)
 *             .region(&#34;sea&#34;)
 *             .tags(&#34;my-instance-tag&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Instances can be imported using the instance `ID`, e.g.
 * 
 * ```sh
 *  $ pulumi import vultr:index/instance:Instance my_instance b6a859c5-b299-49dd-8888-b1abbc517d08
 * ```
 * 
 */
@ResourceType(type="vultr:index/instance:Instance")
public class Instance extends com.pulumi.resources.CustomResource {
    /**
     * Whether an activation email will be sent when the server is ready.
     * 
     */
    @Export(name="activationEmail", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> activationEmail;

    /**
     * @return Whether an activation email will be sent when the server is ready.
     * 
     */
    public Output<Optional<Boolean>> activationEmail() {
        return Codegen.optional(this.activationEmail);
    }
    /**
     * The server&#39;s allowed bandwidth usage in GB.
     * 
     */
    @Export(name="allowedBandwidth", refs={Integer.class}, tree="[0]")
    private Output<Integer> allowedBandwidth;

    /**
     * @return The server&#39;s allowed bandwidth usage in GB.
     * 
     */
    public Output<Integer> allowedBandwidth() {
        return this.allowedBandwidth;
    }
    /**
     * The ID of the Vultr application to be installed on the server. [See List Applications](https://www.vultr.com/api/#operation/list-applications)
     * 
     */
    @Export(name="appId", refs={Integer.class}, tree="[0]")
    private Output<Integer> appId;

    /**
     * @return The ID of the Vultr application to be installed on the server. [See List Applications](https://www.vultr.com/api/#operation/list-applications)
     * 
     */
    public Output<Integer> appId() {
        return this.appId;
    }
    /**
     * Whether automatic backups will be enabled for this server (these have an extra charge associated with them). Values can be enabled or disabled.
     * 
     */
    @Export(name="backups", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> backups;

    /**
     * @return Whether automatic backups will be enabled for this server (these have an extra charge associated with them). Values can be enabled or disabled.
     * 
     */
    public Output<Optional<String>> backups() {
        return Codegen.optional(this.backups);
    }
    /**
     * A block that defines the way backups should be scheduled. While this is an optional field if `backups` are `enabled` this field is mandatory. The configuration of a `backups_schedule` is listed below.
     * 
     */
    @Export(name="backupsSchedule", refs={InstanceBackupsSchedule.class}, tree="[0]")
    private Output</* @Nullable */ InstanceBackupsSchedule> backupsSchedule;

    /**
     * @return A block that defines the way backups should be scheduled. While this is an optional field if `backups` are `enabled` this field is mandatory. The configuration of a `backups_schedule` is listed below.
     * 
     */
    public Output<Optional<InstanceBackupsSchedule>> backupsSchedule() {
        return Codegen.optional(this.backupsSchedule);
    }
    /**
     * The date the server was added to your Vultr account.
     * 
     */
    @Export(name="dateCreated", refs={String.class}, tree="[0]")
    private Output<String> dateCreated;

    /**
     * @return The date the server was added to your Vultr account.
     * 
     */
    public Output<String> dateCreated() {
        return this.dateCreated;
    }
    /**
     * Whether DDOS protection will be enabled on the server (there is an additional charge for this).
     * 
     */
    @Export(name="ddosProtection", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> ddosProtection;

    /**
     * @return Whether DDOS protection will be enabled on the server (there is an additional charge for this).
     * 
     */
    public Output<Optional<Boolean>> ddosProtection() {
        return Codegen.optional(this.ddosProtection);
    }
    /**
     * The server&#39;s default password.
     * 
     */
    @Export(name="defaultPassword", refs={String.class}, tree="[0]")
    private Output<String> defaultPassword;

    /**
     * @return The server&#39;s default password.
     * 
     */
    public Output<String> defaultPassword() {
        return this.defaultPassword;
    }
    /**
     * The description of the disk(s) on the server.
     * 
     */
    @Export(name="disk", refs={Integer.class}, tree="[0]")
    private Output<Integer> disk;

    /**
     * @return The description of the disk(s) on the server.
     * 
     */
    public Output<Integer> disk() {
        return this.disk;
    }
    /**
     * Whether the server has IPv6 networking activated.
     * 
     */
    @Export(name="enableIpv6", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableIpv6;

    /**
     * @return Whether the server has IPv6 networking activated.
     * 
     */
    public Output<Optional<Boolean>> enableIpv6() {
        return Codegen.optional(this.enableIpv6);
    }
    /**
     * Array of which features are enabled.
     * 
     */
    @Export(name="features", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> features;

    /**
     * @return Array of which features are enabled.
     * 
     */
    public Output<List<String>> features() {
        return this.features;
    }
    /**
     * The ID of the firewall group to assign to the server.
     * 
     */
    @Export(name="firewallGroupId", refs={String.class}, tree="[0]")
    private Output<String> firewallGroupId;

    /**
     * @return The ID of the firewall group to assign to the server.
     * 
     */
    public Output<String> firewallGroupId() {
        return this.firewallGroupId;
    }
    /**
     * The server&#39;s IPv4 gateway.
     * 
     */
    @Export(name="gatewayV4", refs={String.class}, tree="[0]")
    private Output<String> gatewayV4;

    /**
     * @return The server&#39;s IPv4 gateway.
     * 
     */
    public Output<String> gatewayV4() {
        return this.gatewayV4;
    }
    /**
     * The hostname to assign to the server.
     * 
     */
    @Export(name="hostname", refs={String.class}, tree="[0]")
    private Output<String> hostname;

    /**
     * @return The hostname to assign to the server.
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }
    /**
     * The ID of the Vultr marketplace application to be installed on the server. [See List Applications](https://www.vultr.com/api/#operation/list-applications) Note marketplace applications are denoted by type: `marketplace` and you must use the `image_id` not the id.
     * 
     */
    @Export(name="imageId", refs={String.class}, tree="[0]")
    private Output<String> imageId;

    /**
     * @return The ID of the Vultr marketplace application to be installed on the server. [See List Applications](https://www.vultr.com/api/#operation/list-applications) Note marketplace applications are denoted by type: `marketplace` and you must use the `image_id` not the id.
     * 
     */
    public Output<String> imageId() {
        return this.imageId;
    }
    /**
     * The server&#39;s internal IP address.
     * 
     */
    @Export(name="internalIp", refs={String.class}, tree="[0]")
    private Output<String> internalIp;

    /**
     * @return The server&#39;s internal IP address.
     * 
     */
    public Output<String> internalIp() {
        return this.internalIp;
    }
    /**
     * The ID of the ISO file to be installed on the server. [See List ISO](https://www.vultr.com/api/#operation/list-isos)
     * 
     */
    @Export(name="isoId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> isoId;

    /**
     * @return The ID of the ISO file to be installed on the server. [See List ISO](https://www.vultr.com/api/#operation/list-isos)
     * 
     */
    public Output<Optional<String>> isoId() {
        return Codegen.optional(this.isoId);
    }
    /**
     * The server&#39;s current KVM URL. This URL will change periodically. It is not advised to cache this value.
     * 
     */
    @Export(name="kvm", refs={String.class}, tree="[0]")
    private Output<String> kvm;

    /**
     * @return The server&#39;s current KVM URL. This URL will change periodically. It is not advised to cache this value.
     * 
     */
    public Output<String> kvm() {
        return this.kvm;
    }
    /**
     * A label for the server.
     * 
     */
    @Export(name="label", refs={String.class}, tree="[0]")
    private Output<String> label;

    /**
     * @return A label for the server.
     * 
     */
    public Output<String> label() {
        return this.label;
    }
    /**
     * The server&#39;s main IP address.
     * 
     */
    @Export(name="mainIp", refs={String.class}, tree="[0]")
    private Output<String> mainIp;

    /**
     * @return The server&#39;s main IP address.
     * 
     */
    public Output<String> mainIp() {
        return this.mainIp;
    }
    /**
     * The server&#39;s IPv4 netmask.
     * 
     */
    @Export(name="netmaskV4", refs={String.class}, tree="[0]")
    private Output<String> netmaskV4;

    /**
     * @return The server&#39;s IPv4 netmask.
     * 
     */
    public Output<String> netmaskV4() {
        return this.netmaskV4;
    }
    /**
     * The string description of the operating system installed on the server.
     * 
     */
    @Export(name="os", refs={String.class}, tree="[0]")
    private Output<String> os;

    /**
     * @return The string description of the operating system installed on the server.
     * 
     */
    public Output<String> os() {
        return this.os;
    }
    /**
     * The ID of the operating system to be installed on the server. [See List OS](https://www.vultr.com/api/#operation/list-os)
     * 
     */
    @Export(name="osId", refs={Integer.class}, tree="[0]")
    private Output<Integer> osId;

    /**
     * @return The ID of the operating system to be installed on the server. [See List OS](https://www.vultr.com/api/#operation/list-os)
     * 
     */
    public Output<Integer> osId() {
        return this.osId;
    }
    /**
     * The ID of the plan that you want the instance to subscribe to. [See List Plans](https://www.vultr.com/api/#tag/plans)
     * 
     */
    @Export(name="plan", refs={String.class}, tree="[0]")
    private Output<String> plan;

    /**
     * @return The ID of the plan that you want the instance to subscribe to. [See List Plans](https://www.vultr.com/api/#tag/plans)
     * 
     */
    public Output<String> plan() {
        return this.plan;
    }
    /**
     * Whether the server is powered on or not.
     * 
     */
    @Export(name="powerStatus", refs={String.class}, tree="[0]")
    private Output<String> powerStatus;

    /**
     * @return Whether the server is powered on or not.
     * 
     */
    public Output<String> powerStatus() {
        return this.powerStatus;
    }
    /**
     * (Deprecated: use `vpc_ids` instead) A list of private network IDs to be attached to the server.
     * 
     * @deprecated
     * private_network_ids has been deprecated and should no longer be used. Instead, use vpc_ids
     * 
     */
    @Deprecated /* private_network_ids has been deprecated and should no longer be used. Instead, use vpc_ids */
    @Export(name="privateNetworkIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> privateNetworkIds;

    /**
     * @return (Deprecated: use `vpc_ids` instead) A list of private network IDs to be attached to the server.
     * 
     */
    public Output<List<String>> privateNetworkIds() {
        return this.privateNetworkIds;
    }
    /**
     * The amount of memory available on the server in MB.
     * 
     */
    @Export(name="ram", refs={Integer.class}, tree="[0]")
    private Output<Integer> ram;

    /**
     * @return The amount of memory available on the server in MB.
     * 
     */
    public Output<Integer> ram() {
        return this.ram;
    }
    /**
     * The ID of the region that the instance is to be created in. [See List Regions](https://www.vultr.com/api/#operation/list-regions)
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return The ID of the region that the instance is to be created in. [See List Regions](https://www.vultr.com/api/#operation/list-regions)
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * ID of the floating IP to use as the main IP of this server.
     * 
     */
    @Export(name="reservedIpId", refs={String.class}, tree="[0]")
    private Output<String> reservedIpId;

    /**
     * @return ID of the floating IP to use as the main IP of this server.
     * 
     */
    public Output<String> reservedIpId() {
        return this.reservedIpId;
    }
    /**
     * The ID of the startup script you want added to the server.
     * 
     */
    @Export(name="scriptId", refs={String.class}, tree="[0]")
    private Output<String> scriptId;

    /**
     * @return The ID of the startup script you want added to the server.
     * 
     */
    public Output<String> scriptId() {
        return this.scriptId;
    }
    /**
     * A more detailed server status (none, locked, installingbooting, isomounting, ok).
     * 
     */
    @Export(name="serverStatus", refs={String.class}, tree="[0]")
    private Output<String> serverStatus;

    /**
     * @return A more detailed server status (none, locked, installingbooting, isomounting, ok).
     * 
     */
    public Output<String> serverStatus() {
        return this.serverStatus;
    }
    /**
     * The ID of the Vultr snapshot that the server will restore for the initial installation. [See List Snapshots](https://www.vultr.com/api/#operation/list-snapshots)
     * 
     */
    @Export(name="snapshotId", refs={String.class}, tree="[0]")
    private Output<String> snapshotId;

    /**
     * @return The ID of the Vultr snapshot that the server will restore for the initial installation. [See List Snapshots](https://www.vultr.com/api/#operation/list-snapshots)
     * 
     */
    public Output<String> snapshotId() {
        return this.snapshotId;
    }
    /**
     * A list of SSH key IDs to apply to the server on install (only valid for Linux/FreeBSD).
     * 
     */
    @Export(name="sshKeyIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> sshKeyIds;

    /**
     * @return A list of SSH key IDs to apply to the server on install (only valid for Linux/FreeBSD).
     * 
     */
    public Output<Optional<List<String>>> sshKeyIds() {
        return Codegen.optional(this.sshKeyIds);
    }
    /**
     * The status of the server&#39;s subscription.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the server&#39;s subscription.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * A list of tags to apply to the instance.
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return A list of tags to apply to the instance.
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Generic data store, which some provisioning tools and cloud operating systems use as a configuration file. It is generally consumed only once after an instance has been launched, but individual needs may vary.
     * 
     */
    @Export(name="userData", refs={String.class}, tree="[0]")
    private Output<String> userData;

    /**
     * @return Generic data store, which some provisioning tools and cloud operating systems use as a configuration file. It is generally consumed only once after an instance has been launched, but individual needs may vary.
     * 
     */
    public Output<String> userData() {
        return this.userData;
    }
    /**
     * The main IPv6 network address.
     * 
     */
    @Export(name="v6MainIp", refs={String.class}, tree="[0]")
    private Output<String> v6MainIp;

    /**
     * @return The main IPv6 network address.
     * 
     */
    public Output<String> v6MainIp() {
        return this.v6MainIp;
    }
    /**
     * The IPv6 subnet.
     * 
     */
    @Export(name="v6Network", refs={String.class}, tree="[0]")
    private Output<String> v6Network;

    /**
     * @return The IPv6 subnet.
     * 
     */
    public Output<String> v6Network() {
        return this.v6Network;
    }
    /**
     * The IPv6 network size in bits.
     * 
     */
    @Export(name="v6NetworkSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> v6NetworkSize;

    /**
     * @return The IPv6 network size in bits.
     * 
     */
    public Output<Integer> v6NetworkSize() {
        return this.v6NetworkSize;
    }
    /**
     * The number of virtual CPUs available on the server.
     * 
     */
    @Export(name="vcpuCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> vcpuCount;

    /**
     * @return The number of virtual CPUs available on the server.
     * 
     */
    public Output<Integer> vcpuCount() {
        return this.vcpuCount;
    }
    /**
     * A list of VPC IDs to be attached to the server.
     * 
     */
    @Export(name="vpcIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> vpcIds;

    /**
     * @return A list of VPC IDs to be attached to the server.
     * 
     */
    public Output<List<String>> vpcIds() {
        return this.vpcIds;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Instance(String name) {
        this(name, InstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Instance(String name, InstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Instance(String name, InstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vultr:index/instance:Instance", name, args == null ? InstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Instance(String name, Output<String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vultr:index/instance:Instance", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "defaultPassword"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Instance get(String name, Output<String> id, @Nullable InstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, state, options);
    }
}
