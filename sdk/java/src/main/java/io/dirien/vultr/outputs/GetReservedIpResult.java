// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.vultr.outputs;

import com.pulumi.core.annotations.CustomType;
import io.dirien.vultr.outputs.GetReservedIpFilter;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetReservedIpResult {
    private @Nullable List<GetReservedIpFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The ID of the VPS the reserved IP is attached to.
     * 
     */
    private String instanceId;
    /**
     * @return The IP type of the reserved IP.
     * 
     */
    private String ipType;
    /**
     * @return The label of the reserved IP.
     * 
     */
    private String label;
    /**
     * @return The ID of the region that the reserved IP is in.
     * 
     */
    private String region;
    /**
     * @return The subnet of the reserved IP.
     * 
     */
    private String subnet;
    /**
     * @return The subnet size of the reserved IP.
     * 
     */
    private Integer subnetSize;

    private GetReservedIpResult() {}
    public List<GetReservedIpFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the VPS the reserved IP is attached to.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The IP type of the reserved IP.
     * 
     */
    public String ipType() {
        return this.ipType;
    }
    /**
     * @return The label of the reserved IP.
     * 
     */
    public String label() {
        return this.label;
    }
    /**
     * @return The ID of the region that the reserved IP is in.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return The subnet of the reserved IP.
     * 
     */
    public String subnet() {
        return this.subnet;
    }
    /**
     * @return The subnet size of the reserved IP.
     * 
     */
    public Integer subnetSize() {
        return this.subnetSize;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReservedIpResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetReservedIpFilter> filters;
        private String id;
        private String instanceId;
        private String ipType;
        private String label;
        private String region;
        private String subnet;
        private Integer subnetSize;
        public Builder() {}
        public Builder(GetReservedIpResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.ipType = defaults.ipType;
    	      this.label = defaults.label;
    	      this.region = defaults.region;
    	      this.subnet = defaults.subnet;
    	      this.subnetSize = defaults.subnetSize;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetReservedIpFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetReservedIpFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        @CustomType.Setter
        public Builder ipType(String ipType) {
            this.ipType = Objects.requireNonNull(ipType);
            return this;
        }
        @CustomType.Setter
        public Builder label(String label) {
            this.label = Objects.requireNonNull(label);
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        @CustomType.Setter
        public Builder subnet(String subnet) {
            this.subnet = Objects.requireNonNull(subnet);
            return this;
        }
        @CustomType.Setter
        public Builder subnetSize(Integer subnetSize) {
            this.subnetSize = Objects.requireNonNull(subnetSize);
            return this;
        }
        public GetReservedIpResult build() {
            final var o = new GetReservedIpResult();
            o.filters = filters;
            o.id = id;
            o.instanceId = instanceId;
            o.ipType = ipType;
            o.label = label;
            o.region = region;
            o.subnet = subnet;
            o.subnetSize = subnetSize;
            return o;
        }
    }
}
