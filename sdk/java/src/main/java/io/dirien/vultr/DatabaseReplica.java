// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.vultr;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.dirien.vultr.DatabaseReplicaArgs;
import io.dirien.vultr.Utilities;
import io.dirien.vultr.inputs.DatabaseReplicaState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides a Vultr database replica resource. This can be used to create, read, modify, and delete managed database read replicas on your Vultr account.
 * 
 * ## Example Usage
 * 
 * Create a new database replica:
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vultr.DatabaseReplica;
 * import com.pulumi.vultr.DatabaseReplicaArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myDatabaseReplica = new DatabaseReplica(&#34;myDatabaseReplica&#34;, DatabaseReplicaArgs.builder()        
 *             .databaseId(vultr_database.my_database().id())
 *             .region(&#34;sea&#34;)
 *             .label(&#34;my_database_replica_label&#34;)
 *             .tag(&#34;test tag&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="vultr:index/databaseReplica:DatabaseReplica")
public class DatabaseReplica extends com.pulumi.resources.CustomResource {
    /**
     * The configured time zone for the managed database read replica in TZ database format.
     * 
     */
    @Export(name="clusterTimeZone", refs={String.class}, tree="[0]")
    private Output<String> clusterTimeZone;

    /**
     * @return The configured time zone for the managed database read replica in TZ database format.
     * 
     */
    public Output<String> clusterTimeZone() {
        return this.clusterTimeZone;
    }
    /**
     * The database engine of the managed database read replica.
     * 
     */
    @Export(name="databaseEngine", refs={String.class}, tree="[0]")
    private Output<String> databaseEngine;

    /**
     * @return The database engine of the managed database read replica.
     * 
     */
    public Output<String> databaseEngine() {
        return this.databaseEngine;
    }
    /**
     * The database engine version of the managed database read replica.
     * 
     */
    @Export(name="databaseEngineVersion", refs={String.class}, tree="[0]")
    private Output<String> databaseEngineVersion;

    /**
     * @return The database engine version of the managed database read replica.
     * 
     */
    public Output<String> databaseEngineVersion() {
        return this.databaseEngineVersion;
    }
    /**
     * The managed database ID you want to attach this replica to.
     * 
     */
    @Export(name="databaseId", refs={String.class}, tree="[0]")
    private Output<String> databaseId;

    /**
     * @return The managed database ID you want to attach this replica to.
     * 
     */
    public Output<String> databaseId() {
        return this.databaseId;
    }
    /**
     * The date the managed database read replica was added to your Vultr account.
     * 
     */
    @Export(name="dateCreated", refs={String.class}, tree="[0]")
    private Output<String> dateCreated;

    /**
     * @return The date the managed database read replica was added to your Vultr account.
     * 
     */
    public Output<String> dateCreated() {
        return this.dateCreated;
    }
    /**
     * The managed database read replica&#39;s default logical database.
     * 
     */
    @Export(name="dbname", refs={String.class}, tree="[0]")
    private Output<String> dbname;

    /**
     * @return The managed database read replica&#39;s default logical database.
     * 
     */
    public Output<String> dbname() {
        return this.dbname;
    }
    /**
     * The hostname assigned to the managed database read replica.
     * 
     */
    @Export(name="host", refs={String.class}, tree="[0]")
    private Output<String> host;

    /**
     * @return The hostname assigned to the managed database read replica.
     * 
     */
    public Output<String> host() {
        return this.host;
    }
    /**
     * A label for the managed database read replica.
     * 
     */
    @Export(name="label", refs={String.class}, tree="[0]")
    private Output<String> label;

    /**
     * @return A label for the managed database read replica.
     * 
     */
    public Output<String> label() {
        return this.label;
    }
    /**
     * The date of the latest backup available on the managed database read replica.
     * 
     */
    @Export(name="latestBackup", refs={String.class}, tree="[0]")
    private Output<String> latestBackup;

    /**
     * @return The date of the latest backup available on the managed database read replica.
     * 
     */
    public Output<String> latestBackup() {
        return this.latestBackup;
    }
    /**
     * The preferred maintenance day of week for the managed database read replica.
     * 
     */
    @Export(name="maintenanceDow", refs={String.class}, tree="[0]")
    private Output<String> maintenanceDow;

    /**
     * @return The preferred maintenance day of week for the managed database read replica.
     * 
     */
    public Output<String> maintenanceDow() {
        return this.maintenanceDow;
    }
    /**
     * The preferred maintenance time for the managed database read replica.
     * 
     */
    @Export(name="maintenanceTime", refs={String.class}, tree="[0]")
    private Output<String> maintenanceTime;

    /**
     * @return The preferred maintenance time for the managed database read replica.
     * 
     */
    public Output<String> maintenanceTime() {
        return this.maintenanceTime;
    }
    /**
     * The configuration value for the long query time (in seconds) on the managed database read replica (MySQL engine types only).
     * 
     */
    @Export(name="mysqlLongQueryTime", refs={Integer.class}, tree="[0]")
    private Output<Integer> mysqlLongQueryTime;

    /**
     * @return The configuration value for the long query time (in seconds) on the managed database read replica (MySQL engine types only).
     * 
     */
    public Output<Integer> mysqlLongQueryTime() {
        return this.mysqlLongQueryTime;
    }
    /**
     * The configuration value for whether primary keys are required on the managed database read replica (MySQL engine types only).
     * 
     */
    @Export(name="mysqlRequirePrimaryKey", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> mysqlRequirePrimaryKey;

    /**
     * @return The configuration value for whether primary keys are required on the managed database read replica (MySQL engine types only).
     * 
     */
    public Output<Boolean> mysqlRequirePrimaryKey() {
        return this.mysqlRequirePrimaryKey;
    }
    /**
     * The configuration value for slow query logging on the managed database read replica (MySQL engine types only).
     * 
     */
    @Export(name="mysqlSlowQueryLog", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> mysqlSlowQueryLog;

    /**
     * @return The configuration value for slow query logging on the managed database read replica (MySQL engine types only).
     * 
     */
    public Output<Boolean> mysqlSlowQueryLog() {
        return this.mysqlSlowQueryLog;
    }
    /**
     * A list of SQL modes currently configured for the managed database read replica (MySQL engine types only).
     * 
     */
    @Export(name="mysqlSqlModes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> mysqlSqlModes;

    /**
     * @return A list of SQL modes currently configured for the managed database read replica (MySQL engine types only).
     * 
     */
    public Output<List<String>> mysqlSqlModes() {
        return this.mysqlSqlModes;
    }
    /**
     * The password for the managed database read replica&#39;s primary admin user.
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output<String> password;

    /**
     * @return The password for the managed database read replica&#39;s primary admin user.
     * 
     */
    public Output<String> password() {
        return this.password;
    }
    /**
     * The managed database read replica&#39;s plan ID.
     * 
     */
    @Export(name="plan", refs={String.class}, tree="[0]")
    private Output<String> plan;

    /**
     * @return The managed database read replica&#39;s plan ID.
     * 
     */
    public Output<String> plan() {
        return this.plan;
    }
    /**
     * The description of the disk(s) on the managed database read replica.
     * 
     */
    @Export(name="planDisk", refs={Integer.class}, tree="[0]")
    private Output<Integer> planDisk;

    /**
     * @return The description of the disk(s) on the managed database read replica.
     * 
     */
    public Output<Integer> planDisk() {
        return this.planDisk;
    }
    /**
     * The amount of memory available on the managed database read replica in MB.
     * 
     */
    @Export(name="planRam", refs={Integer.class}, tree="[0]")
    private Output<Integer> planRam;

    /**
     * @return The amount of memory available on the managed database read replica in MB.
     * 
     */
    public Output<Integer> planRam() {
        return this.planRam;
    }
    /**
     * The number of standby nodes available on the managed database read replica.
     * 
     */
    @Export(name="planReplicas", refs={Integer.class}, tree="[0]")
    private Output<Integer> planReplicas;

    /**
     * @return The number of standby nodes available on the managed database read replica.
     * 
     */
    public Output<Integer> planReplicas() {
        return this.planReplicas;
    }
    /**
     * The number of virtual CPUs available on the managed database read replica.
     * 
     */
    @Export(name="planVcpus", refs={Integer.class}, tree="[0]")
    private Output<Integer> planVcpus;

    /**
     * @return The number of virtual CPUs available on the managed database read replica.
     * 
     */
    public Output<Integer> planVcpus() {
        return this.planVcpus;
    }
    /**
     * The connection port for the managed database read replica.
     * 
     */
    @Export(name="port", refs={String.class}, tree="[0]")
    private Output<String> port;

    /**
     * @return The connection port for the managed database read replica.
     * 
     */
    public Output<String> port() {
        return this.port;
    }
    /**
     * The configuration value for the data eviction policy on the managed database read replica (Redis engine types only).
     * 
     */
    @Export(name="redisEvictionPolicy", refs={String.class}, tree="[0]")
    private Output<String> redisEvictionPolicy;

    /**
     * @return The configuration value for the data eviction policy on the managed database read replica (Redis engine types only).
     * 
     */
    public Output<String> redisEvictionPolicy() {
        return this.redisEvictionPolicy;
    }
    /**
     * The ID of the region that the managed database read replica is to be created in. [See List Regions](https://www.vultr.com/api/#operation/list-regions)
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return The ID of the region that the managed database read replica is to be created in. [See List Regions](https://www.vultr.com/api/#operation/list-regions)
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * The current status of the managed database read replica (poweroff, rebuilding, rebalancing, running).
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The current status of the managed database read replica (poweroff, rebuilding, rebalancing, running).
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * The tag to assign to the managed database read replica.
     * 
     */
    @Export(name="tag", refs={String.class}, tree="[0]")
    private Output<String> tag;

    /**
     * @return The tag to assign to the managed database read replica.
     * 
     */
    public Output<String> tag() {
        return this.tag;
    }
    /**
     * A list of allowed IP addresses for the managed database read replica.
     * 
     */
    @Export(name="trustedIps", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> trustedIps;

    /**
     * @return A list of allowed IP addresses for the managed database read replica.
     * 
     */
    public Output<List<String>> trustedIps() {
        return this.trustedIps;
    }
    /**
     * The primary admin user for the managed database read replica.
     * 
     */
    @Export(name="user", refs={String.class}, tree="[0]")
    private Output<String> user;

    /**
     * @return The primary admin user for the managed database read replica.
     * 
     */
    public Output<String> user() {
        return this.user;
    }
    @Export(name="vpcId", refs={String.class}, tree="[0]")
    private Output<String> vpcId;

    public Output<String> vpcId() {
        return this.vpcId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DatabaseReplica(String name) {
        this(name, DatabaseReplicaArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DatabaseReplica(String name, DatabaseReplicaArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DatabaseReplica(String name, DatabaseReplicaArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vultr:index/databaseReplica:DatabaseReplica", name, args == null ? DatabaseReplicaArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DatabaseReplica(String name, Output<String> id, @Nullable DatabaseReplicaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vultr:index/databaseReplica:DatabaseReplica", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DatabaseReplica get(String name, Output<String> id, @Nullable DatabaseReplicaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DatabaseReplica(name, id, state, options);
    }
}
