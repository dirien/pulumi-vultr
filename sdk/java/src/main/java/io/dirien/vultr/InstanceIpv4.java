// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.vultr;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.dirien.vultr.InstanceIpv4Args;
import io.dirien.vultr.Utilities;
import io.dirien.vultr.inputs.InstanceIpv4State;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Vultr instance IPv4 resource. This can be used to create, read, and
 * modify a IPv4 address. instance is rebooted by default.
 * 
 * ## Example Usage
 * 
 * Create a new IPv4 address for a instance:
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vultr.Instance;
 * import com.pulumi.vultr.InstanceArgs;
 * import com.pulumi.vultr.InstanceIpv4;
 * import com.pulumi.vultr.InstanceIpv4Args;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myInstance = new Instance(&#34;myInstance&#34;, InstanceArgs.builder()        
 *             .enableIpv6(true)
 *             .osId(167)
 *             .plan(&#34;vc2-1c-1gb&#34;)
 *             .region(&#34;ewr&#34;)
 *             .build());
 * 
 *         var myInstanceIpv4 = new InstanceIpv4(&#34;myInstanceIpv4&#34;, InstanceIpv4Args.builder()        
 *             .instanceId(myInstance.id())
 *             .reboot(false)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="vultr:index/instanceIpv4:InstanceIpv4")
public class InstanceIpv4 extends com.pulumi.resources.CustomResource {
    /**
     * The gateway IP address.
     * 
     */
    @Export(name="gateway", refs={String.class}, tree="[0]")
    private Output<String> gateway;

    /**
     * @return The gateway IP address.
     * 
     */
    public Output<String> gateway() {
        return this.gateway;
    }
    /**
     * The ID of the instance to be assigned the IPv4 address.
     * 
     */
    @Export(name="instanceId", refs={String.class}, tree="[0]")
    private Output<String> instanceId;

    /**
     * @return The ID of the instance to be assigned the IPv4 address.
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }
    /**
     * The IPv4 address in canonical format.
     * 
     */
    @Export(name="ip", refs={String.class}, tree="[0]")
    private Output<String> ip;

    /**
     * @return The IPv4 address in canonical format.
     * 
     */
    public Output<String> ip() {
        return this.ip;
    }
    /**
     * The IPv4 netmask in dot-decimal notation.
     * 
     */
    @Export(name="netmask", refs={String.class}, tree="[0]")
    private Output<String> netmask;

    /**
     * @return The IPv4 netmask in dot-decimal notation.
     * 
     */
    public Output<String> netmask() {
        return this.netmask;
    }
    /**
     * Default true. Determines whether or not the server is rebooted after adding the IPv4 address.
     * 
     */
    @Export(name="reboot", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> reboot;

    /**
     * @return Default true. Determines whether or not the server is rebooted after adding the IPv4 address.
     * 
     */
    public Output<Optional<Boolean>> reboot() {
        return Codegen.optional(this.reboot);
    }
    /**
     * The reverse DNS information for this IP address.
     * 
     */
    @Export(name="reverse", refs={String.class}, tree="[0]")
    private Output<String> reverse;

    /**
     * @return The reverse DNS information for this IP address.
     * 
     */
    public Output<String> reverse() {
        return this.reverse;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InstanceIpv4(String name) {
        this(name, InstanceIpv4Args.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InstanceIpv4(String name, InstanceIpv4Args args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InstanceIpv4(String name, InstanceIpv4Args args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vultr:index/instanceIpv4:InstanceIpv4", name, args == null ? InstanceIpv4Args.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private InstanceIpv4(String name, Output<String> id, @Nullable InstanceIpv4State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vultr:index/instanceIpv4:InstanceIpv4", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InstanceIpv4 get(String name, Output<String> id, @Nullable InstanceIpv4State state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InstanceIpv4(name, id, state, options);
    }
}
