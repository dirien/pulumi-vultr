// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.vultr.outputs;

import com.pulumi.core.annotations.CustomType;
import io.dirien.vultr.outputs.GetRegionFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetRegionResult {
    /**
     * @return The city the region is in.
     * 
     */
    private String city;
    /**
     * @return The continent the region is in.
     * 
     */
    private String continent;
    /**
     * @return The country the region is in.
     * 
     */
    private String country;
    private @Nullable List<GetRegionFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Shows whether options like ddos protection or block storage are available in the region.
     * 
     */
    private List<String> options;

    private GetRegionResult() {}
    /**
     * @return The city the region is in.
     * 
     */
    public String city() {
        return this.city;
    }
    /**
     * @return The continent the region is in.
     * 
     */
    public String continent() {
        return this.continent;
    }
    /**
     * @return The country the region is in.
     * 
     */
    public String country() {
        return this.country;
    }
    public List<GetRegionFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Shows whether options like ddos protection or block storage are available in the region.
     * 
     */
    public List<String> options() {
        return this.options;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String city;
        private String continent;
        private String country;
        private @Nullable List<GetRegionFilter> filters;
        private String id;
        private List<String> options;
        public Builder() {}
        public Builder(GetRegionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.city = defaults.city;
    	      this.continent = defaults.continent;
    	      this.country = defaults.country;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.options = defaults.options;
        }

        @CustomType.Setter
        public Builder city(String city) {
            this.city = Objects.requireNonNull(city);
            return this;
        }
        @CustomType.Setter
        public Builder continent(String continent) {
            this.continent = Objects.requireNonNull(continent);
            return this;
        }
        @CustomType.Setter
        public Builder country(String country) {
            this.country = Objects.requireNonNull(country);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetRegionFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetRegionFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder options(List<String> options) {
            this.options = Objects.requireNonNull(options);
            return this;
        }
        public Builder options(String... options) {
            return options(List.of(options));
        }
        public GetRegionResult build() {
            final var o = new GetRegionResult();
            o.city = city;
            o.continent = continent;
            o.country = country;
            o.filters = filters;
            o.id = id;
            o.options = options;
            return o;
        }
    }
}
