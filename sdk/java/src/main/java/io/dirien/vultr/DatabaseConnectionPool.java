// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.vultr;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.dirien.vultr.DatabaseConnectionPoolArgs;
import io.dirien.vultr.Utilities;
import io.dirien.vultr.inputs.DatabaseConnectionPoolState;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

@ResourceType(type="vultr:index/databaseConnectionPool:DatabaseConnectionPool")
public class DatabaseConnectionPool extends com.pulumi.resources.CustomResource {
    @Export(name="database", refs={String.class}, tree="[0]")
    private Output<String> database;

    public Output<String> database() {
        return this.database;
    }
    @Export(name="databaseId", refs={String.class}, tree="[0]")
    private Output<String> databaseId;

    public Output<String> databaseId() {
        return this.databaseId;
    }
    @Export(name="mode", refs={String.class}, tree="[0]")
    private Output<String> mode;

    public Output<String> mode() {
        return this.mode;
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="size", refs={Integer.class}, tree="[0]")
    private Output<Integer> size;

    public Output<Integer> size() {
        return this.size;
    }
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output<String> username;

    public Output<String> username() {
        return this.username;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DatabaseConnectionPool(String name) {
        this(name, DatabaseConnectionPoolArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DatabaseConnectionPool(String name, DatabaseConnectionPoolArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DatabaseConnectionPool(String name, DatabaseConnectionPoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vultr:index/databaseConnectionPool:DatabaseConnectionPool", name, args == null ? DatabaseConnectionPoolArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DatabaseConnectionPool(String name, Output<String> id, @Nullable DatabaseConnectionPoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vultr:index/databaseConnectionPool:DatabaseConnectionPool", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DatabaseConnectionPool get(String name, Output<String> id, @Nullable DatabaseConnectionPoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DatabaseConnectionPool(name, id, state, options);
    }
}
