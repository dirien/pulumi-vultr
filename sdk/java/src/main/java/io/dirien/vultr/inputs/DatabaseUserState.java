// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.vultr.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseUserState extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseUserState Empty = new DatabaseUserState();

    @Import(name="databaseId")
    private @Nullable Output<String> databaseId;

    public Optional<Output<String>> databaseId() {
        return Optional.ofNullable(this.databaseId);
    }

    @Import(name="encryption")
    private @Nullable Output<String> encryption;

    public Optional<Output<String>> encryption() {
        return Optional.ofNullable(this.encryption);
    }

    @Import(name="password")
    private @Nullable Output<String> password;

    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    @Import(name="username")
    private @Nullable Output<String> username;

    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private DatabaseUserState() {}

    private DatabaseUserState(DatabaseUserState $) {
        this.databaseId = $.databaseId;
        this.encryption = $.encryption;
        this.password = $.password;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseUserState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseUserState $;

        public Builder() {
            $ = new DatabaseUserState();
        }

        public Builder(DatabaseUserState defaults) {
            $ = new DatabaseUserState(Objects.requireNonNull(defaults));
        }

        public Builder databaseId(@Nullable Output<String> databaseId) {
            $.databaseId = databaseId;
            return this;
        }

        public Builder databaseId(String databaseId) {
            return databaseId(Output.of(databaseId));
        }

        public Builder encryption(@Nullable Output<String> encryption) {
            $.encryption = encryption;
            return this;
        }

        public Builder encryption(String encryption) {
            return encryption(Output.of(encryption));
        }

        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        public Builder password(String password) {
            return password(Output.of(password));
        }

        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        public Builder username(String username) {
            return username(Output.of(username));
        }

        public DatabaseUserState build() {
            return $;
        }
    }

}
