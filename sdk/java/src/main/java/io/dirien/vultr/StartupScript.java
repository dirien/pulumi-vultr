// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.vultr;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.dirien.vultr.StartupScriptArgs;
import io.dirien.vultr.Utilities;
import io.dirien.vultr.inputs.StartupScriptState;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a Vultr Startup Script resource. This can be used to create, read, modify, and delete Startup Scripts.
 * 
 * ## Example Usage
 * 
 * Create a new Startup Script
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.vultr.StartupScript;
 * import com.pulumi.vultr.StartupScriptArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myScript = new StartupScript(&#34;myScript&#34;, StartupScriptArgs.builder()        
 *             .script(&#34;ZWNobyAkUEFUSAo=&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Startup Scripts can be imported using the Startup Scripts `ID`, e.g.
 * 
 * ```sh
 *  $ pulumi import vultr:index/startupScript:StartupScript my_script ff8f36a8-eb86-4b8d-8667-b9d5459b6390
 * ```
 * 
 */
@ResourceType(type="vultr:index/startupScript:StartupScript")
public class StartupScript extends com.pulumi.resources.CustomResource {
    /**
     * Date the script was created.
     * 
     */
    @Export(name="dateCreated", refs={String.class}, tree="[0]")
    private Output<String> dateCreated;

    /**
     * @return Date the script was created.
     * 
     */
    public Output<String> dateCreated() {
        return this.dateCreated;
    }
    /**
     * Date the script was last modified.
     * 
     */
    @Export(name="dateModified", refs={String.class}, tree="[0]")
    private Output<String> dateModified;

    /**
     * @return Date the script was last modified.
     * 
     */
    public Output<String> dateModified() {
        return this.dateModified;
    }
    /**
     * Name of the given script.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the given script.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Contents of the startup script base64 encoded.
     * 
     */
    @Export(name="script", refs={String.class}, tree="[0]")
    private Output<String> script;

    /**
     * @return Contents of the startup script base64 encoded.
     * 
     */
    public Output<String> script() {
        return this.script;
    }
    /**
     * Type of startup script. Possible values are boot or pxe - default is boot.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> type;

    /**
     * @return Type of startup script. Possible values are boot or pxe - default is boot.
     * 
     */
    public Output<Optional<String>> type() {
        return Codegen.optional(this.type);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StartupScript(String name) {
        this(name, StartupScriptArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StartupScript(String name, StartupScriptArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StartupScript(String name, StartupScriptArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vultr:index/startupScript:StartupScript", name, args == null ? StartupScriptArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private StartupScript(String name, Output<String> id, @Nullable StartupScriptState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("vultr:index/startupScript:StartupScript", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StartupScript get(String name, Output<String> id, @Nullable StartupScriptState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StartupScript(name, id, state, options);
    }
}
