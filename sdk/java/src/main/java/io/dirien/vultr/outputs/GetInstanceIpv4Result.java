// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.vultr.outputs;

import com.pulumi.core.annotations.CustomType;
import io.dirien.vultr.outputs.GetInstanceIpv4Filter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetInstanceIpv4Result {
    private @Nullable List<GetInstanceIpv4Filter> filters;
    /**
     * @return The gateway IP address.
     * 
     */
    private String gateway;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The ID of the instance the IPv4 address.
     * 
     */
    private String instanceId;
    /**
     * @return The IPv4 address in canonical format.
     * 
     */
    private String ip;
    /**
     * @return The IPv4 netmask in dot-decimal notation.
     * 
     */
    private String netmask;
    /**
     * @return The reverse DNS information for this IP address.
     * 
     */
    private String reverse;

    private GetInstanceIpv4Result() {}
    public List<GetInstanceIpv4Filter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The gateway IP address.
     * 
     */
    public String gateway() {
        return this.gateway;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the instance the IPv4 address.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return The IPv4 address in canonical format.
     * 
     */
    public String ip() {
        return this.ip;
    }
    /**
     * @return The IPv4 netmask in dot-decimal notation.
     * 
     */
    public String netmask() {
        return this.netmask;
    }
    /**
     * @return The reverse DNS information for this IP address.
     * 
     */
    public String reverse() {
        return this.reverse;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceIpv4Result defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetInstanceIpv4Filter> filters;
        private String gateway;
        private String id;
        private String instanceId;
        private String ip;
        private String netmask;
        private String reverse;
        public Builder() {}
        public Builder(GetInstanceIpv4Result defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.gateway = defaults.gateway;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.ip = defaults.ip;
    	      this.netmask = defaults.netmask;
    	      this.reverse = defaults.reverse;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetInstanceIpv4Filter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetInstanceIpv4Filter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder gateway(String gateway) {
            this.gateway = Objects.requireNonNull(gateway);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        @CustomType.Setter
        public Builder ip(String ip) {
            this.ip = Objects.requireNonNull(ip);
            return this;
        }
        @CustomType.Setter
        public Builder netmask(String netmask) {
            this.netmask = Objects.requireNonNull(netmask);
            return this;
        }
        @CustomType.Setter
        public Builder reverse(String reverse) {
            this.reverse = Objects.requireNonNull(reverse);
            return this;
        }
        public GetInstanceIpv4Result build() {
            final var o = new GetInstanceIpv4Result();
            o.filters = filters;
            o.gateway = gateway;
            o.id = id;
            o.instanceId = instanceId;
            o.ip = ip;
            o.netmask = netmask;
            o.reverse = reverse;
            return o;
        }
    }
}
