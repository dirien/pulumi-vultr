// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.vultr.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StartupScriptState extends com.pulumi.resources.ResourceArgs {

    public static final StartupScriptState Empty = new StartupScriptState();

    /**
     * Date the script was created.
     * 
     */
    @Import(name="dateCreated")
    private @Nullable Output<String> dateCreated;

    /**
     * @return Date the script was created.
     * 
     */
    public Optional<Output<String>> dateCreated() {
        return Optional.ofNullable(this.dateCreated);
    }

    /**
     * Date the script was last modified.
     * 
     */
    @Import(name="dateModified")
    private @Nullable Output<String> dateModified;

    /**
     * @return Date the script was last modified.
     * 
     */
    public Optional<Output<String>> dateModified() {
        return Optional.ofNullable(this.dateModified);
    }

    /**
     * Name of the given script.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the given script.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Contents of the startup script base64 encoded.
     * 
     */
    @Import(name="script")
    private @Nullable Output<String> script;

    /**
     * @return Contents of the startup script base64 encoded.
     * 
     */
    public Optional<Output<String>> script() {
        return Optional.ofNullable(this.script);
    }

    /**
     * Type of startup script. Possible values are boot or pxe - default is boot.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type of startup script. Possible values are boot or pxe - default is boot.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private StartupScriptState() {}

    private StartupScriptState(StartupScriptState $) {
        this.dateCreated = $.dateCreated;
        this.dateModified = $.dateModified;
        this.name = $.name;
        this.script = $.script;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StartupScriptState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StartupScriptState $;

        public Builder() {
            $ = new StartupScriptState();
        }

        public Builder(StartupScriptState defaults) {
            $ = new StartupScriptState(Objects.requireNonNull(defaults));
        }

        /**
         * @param dateCreated Date the script was created.
         * 
         * @return builder
         * 
         */
        public Builder dateCreated(@Nullable Output<String> dateCreated) {
            $.dateCreated = dateCreated;
            return this;
        }

        /**
         * @param dateCreated Date the script was created.
         * 
         * @return builder
         * 
         */
        public Builder dateCreated(String dateCreated) {
            return dateCreated(Output.of(dateCreated));
        }

        /**
         * @param dateModified Date the script was last modified.
         * 
         * @return builder
         * 
         */
        public Builder dateModified(@Nullable Output<String> dateModified) {
            $.dateModified = dateModified;
            return this;
        }

        /**
         * @param dateModified Date the script was last modified.
         * 
         * @return builder
         * 
         */
        public Builder dateModified(String dateModified) {
            return dateModified(Output.of(dateModified));
        }

        /**
         * @param name Name of the given script.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the given script.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param script Contents of the startup script base64 encoded.
         * 
         * @return builder
         * 
         */
        public Builder script(@Nullable Output<String> script) {
            $.script = script;
            return this;
        }

        /**
         * @param script Contents of the startup script base64 encoded.
         * 
         * @return builder
         * 
         */
        public Builder script(String script) {
            return script(Output.of(script));
        }

        /**
         * @param type Type of startup script. Possible values are boot or pxe - default is boot.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of startup script. Possible values are boot or pxe - default is boot.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public StartupScriptState build() {
            return $;
        }
    }

}
