// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.dirien.vultr.outputs;

import com.pulumi.core.annotations.CustomType;
import io.dirien.vultr.outputs.GetStartupScriptFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetStartupScriptResult {
    /**
     * @return The date the startup script was added to your Vultr account.
     * 
     */
    private String dateCreated;
    /**
     * @return The date the startup script was last modified.
     * 
     */
    private String dateModified;
    private @Nullable List<GetStartupScriptFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name of the startup script.
     * 
     */
    private String name;
    /**
     * @return The contents of the startup script base64 encoded.
     * 
     */
    private String script;
    /**
     * @return The type of the startup script.
     * 
     */
    private String type;

    private GetStartupScriptResult() {}
    /**
     * @return The date the startup script was added to your Vultr account.
     * 
     */
    public String dateCreated() {
        return this.dateCreated;
    }
    /**
     * @return The date the startup script was last modified.
     * 
     */
    public String dateModified() {
        return this.dateModified;
    }
    public List<GetStartupScriptFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the startup script.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The contents of the startup script base64 encoded.
     * 
     */
    public String script() {
        return this.script;
    }
    /**
     * @return The type of the startup script.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStartupScriptResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dateCreated;
        private String dateModified;
        private @Nullable List<GetStartupScriptFilter> filters;
        private String id;
        private String name;
        private String script;
        private String type;
        public Builder() {}
        public Builder(GetStartupScriptResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dateCreated = defaults.dateCreated;
    	      this.dateModified = defaults.dateModified;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.script = defaults.script;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder dateCreated(String dateCreated) {
            this.dateCreated = Objects.requireNonNull(dateCreated);
            return this;
        }
        @CustomType.Setter
        public Builder dateModified(String dateModified) {
            this.dateModified = Objects.requireNonNull(dateModified);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetStartupScriptFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetStartupScriptFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder script(String script) {
            this.script = Objects.requireNonNull(script);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetStartupScriptResult build() {
            final var o = new GetStartupScriptResult();
            o.dateCreated = dateCreated;
            o.dateModified = dateModified;
            o.filters = filters;
            o.id = id;
            o.name = name;
            o.script = script;
            o.type = type;
            return o;
        }
    }
}
