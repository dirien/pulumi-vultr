// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Vultr Firewall Group resource. This can be used to create, read, modify, and delete Firewall Group.
 *
 * ## Example Usage
 *
 * Create a new Firewall group
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const myFirewallgroup = new vultr.FirewallGroup("myFirewallgroup", {description: "base firewall"});
 * ```
 *
 * ## Import
 *
 * Firewall Groups can be imported using the Firewall Group `FIREWALLGROUPID`, e.g.
 *
 * ```sh
 *  $ pulumi import vultr:index/firewallGroup:FirewallGroup my_firewallgroup c342f929
 * ```
 */
export class FirewallGroup extends pulumi.CustomResource {
    /**
     * Get an existing FirewallGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallGroupState, opts?: pulumi.CustomResourceOptions): FirewallGroup {
        return new FirewallGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vultr:index/firewallGroup:FirewallGroup';

    /**
     * Returns true if the given object is an instance of FirewallGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallGroup.__pulumiType;
    }

    /**
     * The date the firewall group was created.
     */
    public /*out*/ readonly dateCreated!: pulumi.Output<string>;
    /**
     * The date the firewall group was modified.
     */
    public /*out*/ readonly dateModified!: pulumi.Output<string>;
    /**
     * Description of the firewall group.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The number of instances that are currently using this firewall group.
     */
    public /*out*/ readonly instanceCount!: pulumi.Output<number>;
    /**
     * The number of max firewall rules this group can have.
     */
    public /*out*/ readonly maxRuleCount!: pulumi.Output<number>;
    /**
     * The number of firewall rules this group currently has.
     */
    public /*out*/ readonly ruleCount!: pulumi.Output<number>;

    /**
     * Create a FirewallGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FirewallGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallGroupArgs | FirewallGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallGroupState | undefined;
            resourceInputs["dateCreated"] = state ? state.dateCreated : undefined;
            resourceInputs["dateModified"] = state ? state.dateModified : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceCount"] = state ? state.instanceCount : undefined;
            resourceInputs["maxRuleCount"] = state ? state.maxRuleCount : undefined;
            resourceInputs["ruleCount"] = state ? state.ruleCount : undefined;
        } else {
            const args = argsOrState as FirewallGroupArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dateCreated"] = undefined /*out*/;
            resourceInputs["dateModified"] = undefined /*out*/;
            resourceInputs["instanceCount"] = undefined /*out*/;
            resourceInputs["maxRuleCount"] = undefined /*out*/;
            resourceInputs["ruleCount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FirewallGroup resources.
 */
export interface FirewallGroupState {
    /**
     * The date the firewall group was created.
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * The date the firewall group was modified.
     */
    dateModified?: pulumi.Input<string>;
    /**
     * Description of the firewall group.
     */
    description?: pulumi.Input<string>;
    /**
     * The number of instances that are currently using this firewall group.
     */
    instanceCount?: pulumi.Input<number>;
    /**
     * The number of max firewall rules this group can have.
     */
    maxRuleCount?: pulumi.Input<number>;
    /**
     * The number of firewall rules this group currently has.
     */
    ruleCount?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a FirewallGroup resource.
 */
export interface FirewallGroupArgs {
    /**
     * Description of the firewall group.
     */
    description?: pulumi.Input<string>;
}
