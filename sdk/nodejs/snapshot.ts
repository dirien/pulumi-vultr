// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a Vultr Snapshot resource. This can be used to create, read, modify, and delete Snapshot.
 *
 * ## Example Usage
 *
 * Create a new Snapshot
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const myInstance = new vultr.Instance("myInstance", {
 *     label: "my_instance",
 *     osId: 167,
 *     plan: "201",
 *     region: "ewr",
 * });
 * const mySnapshot = new vultr.Snapshot("mySnapshot", {
 *     description: "my instances snapshot",
 *     instanceId: myInstance.id,
 * });
 * ```
 *
 * ## Import
 *
 * Snapshots can be imported using the Snapshot `ID`, e.g.
 *
 * ```sh
 * $ pulumi import vultr:index/snapshot:Snapshot my_snapshot 283941e8-0783-410e-9540-71c86b833992
 * ```
 */
export class Snapshot extends pulumi.CustomResource {
    /**
     * Get an existing Snapshot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnapshotState, opts?: pulumi.CustomResourceOptions): Snapshot {
        return new Snapshot(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'vultr:index/snapshot:Snapshot';

    /**
     * Returns true if the given object is an instance of Snapshot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Snapshot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Snapshot.__pulumiType;
    }

    /**
     * The app id which the snapshot is associated with.
     */
    public /*out*/ readonly appId!: pulumi.Output<number>;
    /**
     * The date the snapshot was created.
     */
    public /*out*/ readonly dateCreated!: pulumi.Output<string>;
    /**
     * The description for the given snapshot.
     *
     * Snapshots often exceed the default timeout built in to all create requests in
     * the provider. In order to customize that, you may specify a custome value in a
     * `timeouts` block of the resource definition
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * ID of a given instance that you want to create a snapshot from.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The os id which the snapshot is associated with.
     */
    public /*out*/ readonly osId!: pulumi.Output<number>;
    /**
     * The size of the snapshot in Bytes.
     */
    public /*out*/ readonly size!: pulumi.Output<number>;
    /**
     * The status for the given snapshot.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a Snapshot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SnapshotArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SnapshotArgs | SnapshotState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SnapshotState | undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["dateCreated"] = state ? state.dateCreated : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["osId"] = state ? state.osId : undefined;
            resourceInputs["size"] = state ? state.size : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as SnapshotArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["appId"] = undefined /*out*/;
            resourceInputs["dateCreated"] = undefined /*out*/;
            resourceInputs["osId"] = undefined /*out*/;
            resourceInputs["size"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Snapshot.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Snapshot resources.
 */
export interface SnapshotState {
    /**
     * The app id which the snapshot is associated with.
     */
    appId?: pulumi.Input<number>;
    /**
     * The date the snapshot was created.
     */
    dateCreated?: pulumi.Input<string>;
    /**
     * The description for the given snapshot.
     *
     * Snapshots often exceed the default timeout built in to all create requests in
     * the provider. In order to customize that, you may specify a custome value in a
     * `timeouts` block of the resource definition
     */
    description?: pulumi.Input<string>;
    /**
     * ID of a given instance that you want to create a snapshot from.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The os id which the snapshot is associated with.
     */
    osId?: pulumi.Input<number>;
    /**
     * The size of the snapshot in Bytes.
     */
    size?: pulumi.Input<number>;
    /**
     * The status for the given snapshot.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Snapshot resource.
 */
export interface SnapshotArgs {
    /**
     * The description for the given snapshot.
     *
     * Snapshots often exceed the default timeout built in to all create requests in
     * the provider. In order to customize that, you may specify a custome value in a
     * `timeouts` block of the resource definition
     */
    description?: pulumi.Input<string>;
    /**
     * ID of a given instance that you want to create a snapshot from.
     */
    instanceId: pulumi.Input<string>;
}
