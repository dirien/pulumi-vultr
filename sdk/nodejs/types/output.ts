// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GetApplicationFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetBackupFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetBareMetalPlanFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetBareMetalServerFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetBlockStorageFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetFirewallGroupFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetInstanceFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetInstanceIpv4Filter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values to filter with.
     */
    values: string[];
}

export interface GetIsoPrivateFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetIsoPublicFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetKubernetesFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetKubernetesNodePool {
    /**
     * Boolean indicating if the auto scaler for the default node pool is active.
     */
    autoScaler?: boolean;
    /**
     * Date node was created.
     */
    dateCreated: string;
    /**
     * Date of node pool updates.
     */
    dateUpdated: string;
    /**
     * ID of node.
     */
    id: string;
    /**
     * Label of node.
     */
    label: string;
    /**
     * The maximum number of nodes used by the auto scaler.
     */
    maxNodes?: number;
    /**
     * The minimum number of nodes used by the auto scaler.
     */
    minNodes?: number;
    /**
     * Number of nodes within node pool.
     */
    nodeQuantity: number;
    /**
     * Array that contains information about nodes within this node pool.
     */
    nodes: outputs.GetKubernetesNodePoolNode[];
    /**
     * Node plan that nodes are using within this node pool.
     */
    plan: string;
    /**
     * Status of node.
     */
    status: string;
    /**
     * Tag for node pool.
     */
    tag: string;
}

export interface GetKubernetesNodePoolNode {
    /**
     * Date node was created.
     */
    dateCreated: string;
    /**
     * ID of node.
     */
    id: string;
    /**
     * Label of node.
     */
    label: string;
    /**
     * Status of node.
     */
    status: string;
}

export interface GetLoadBalancerFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetObjectStorageClusterFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetObjectStorageFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetOsFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetPlanFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetPrivateNetworkFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetRegionFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetReservedIpFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetReverseIpv4Filter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values to filter with.
     */
    values: string[];
}

export interface GetReverseIpv6Filter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values to filter with.
     */
    values: string[];
}

export interface GetSnapshotFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetSshKeyFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetStartupScriptFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetUserFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface GetVpcFilter {
    /**
     * Attribute name to filter with.
     */
    name: string;
    /**
     * One or more values filter with.
     */
    values: string[];
}

export interface InstanceBackupsSchedule {
    /**
     * Day of month to run. Use values between 1 and 28.
     */
    dom: number;
    /**
     * Day of week to run. `1 = Sunday`, `2 = Monday`, `3 = Tuesday`, `4 = Wednesday`, `5 = Thursday`, `6 = Friday`, `7 = Saturday`
     */
    dow: number;
    /**
     * Hour of day to run in UTC.
     */
    hour: number;
    /**
     * Type of backup schedule Possible values are `daily`, `weekly`, `monthly`, `dailyAltEven`, or `dailyAltOdd`.
     */
    type: string;
}

export interface KubernetesNodePools {
    /**
     * Enable the auto scaler for the default node pool.
     */
    autoScaler?: boolean;
    /**
     * Date node was created.
     */
    dateCreated: string;
    /**
     * Date of node pool updates.
     */
    dateUpdated: string;
    /**
     * ID of node.
     */
    id: string;
    /**
     * The label to be used as a prefix for nodes in this node pool.
     */
    label: string;
    /**
     * The maximum number of nodes to use with the auto scaler.
     */
    maxNodes?: number;
    /**
     * The minimum number of nodes to use with the auto scaler.
     */
    minNodes?: number;
    /**
     * The number of nodes in this node pool.
     */
    nodeQuantity: number;
    /**
     * Array that contains information about nodes within this node pool.
     */
    nodes: outputs.KubernetesNodePoolsNode[];
    /**
     * The plan to be used in this node pool. [See Plans List](https://www.vultr.com/api/#operation/list-plans) Note the minimum plan requirements must have at least 1 core and 2 gbs of memory.
     */
    plan: string;
    /**
     * Status of node.
     */
    status: string;
    /**
     * Tag for node pool.
     */
    tag: string;
}

export interface KubernetesNodePoolsNode {
    /**
     * Date node was created.
     */
    dateCreated: string;
    /**
     * ID of node.
     */
    id: string;
    /**
     * The label to be used as a prefix for nodes in this node pool.
     */
    label: string;
    /**
     * Status of node.
     */
    status: string;
}

export interface LoadBalancerFirewallRule {
    /**
     * The load balancer ID.
     */
    id: string;
    /**
     * The type of ip this rule is - may be either v4 or v6.
     */
    ipType: string;
    /**
     * The assigned port (integer) on the attached instances that the load balancer should check against. Default value is `80`.
     */
    port: number;
    /**
     * IP address with subnet that is allowed through the firewall. You may also pass in `cloudflare` which will allow only CloudFlares IP range.
     */
    source: string;
}

export interface LoadBalancerForwardingRule {
    /**
     * Port on instance side.
     */
    backendPort: number;
    /**
     * Protocol on instance side. Possible values: "http", "https", "tcp".
     */
    backendProtocol: string;
    /**
     * Port on load balancer side.
     */
    frontendPort: number;
    /**
     * Protocol on load balancer side. Possible values: "http", "https", "tcp".
     */
    frontendProtocol: string;
    ruleId: string;
}

export interface LoadBalancerHealthCheck {
    /**
     * Time in seconds to perform health check. Default value is 15.
     */
    checkInterval: number;
    /**
     * Number of failed attempts encountered before failover. Default value is 5.
     */
    healthyThreshold: number;
    /**
     * The path on the attached instances that the load balancer should check against. Default value is `/`
     */
    path?: string;
    /**
     * The assigned port (integer) on the attached instances that the load balancer should check against. Default value is `80`.
     */
    port: number;
    /**
     * The protocol used to traffic requests to the load balancer. Possible values are `http`, or `tcp`. Default value is `http`.
     */
    protocol: string;
    /**
     * Time in seconds to wait for a health check response. Default value is 5.
     */
    responseTimeout: number;
    /**
     * Number of failed attempts encountered before failover. Default value is 5.
     */
    unhealthyThreshold: number;
}

export interface LoadBalancerSsl {
    /**
     * The SSL Certificate.
     */
    certificate: string;
    /**
     * The SSL certificate chain.
     */
    chain?: string;
    /**
     * The SSL certificates private key.
     */
    privateKey: string;
}

