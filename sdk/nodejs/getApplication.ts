// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about applications that can be launched when creating a Vultr VPS.
 *
 * ## Example Usage
 *
 * Get the information for an application by `deployName`:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const docker = vultr.getApplication({
 *     filters: [{
 *         name: "deploy_name",
 *         values: ["Docker on CentOS 7 x64"],
 *     }],
 * });
 * ```
 */
export function getApplication(args?: GetApplicationArgs, opts?: pulumi.InvokeOptions): Promise<GetApplicationResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vultr:index/getApplication:getApplication", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getApplication.
 */
export interface GetApplicationArgs {
    /**
     * Query parameters for finding applications.
     */
    filters?: inputs.GetApplicationFilter[];
}

/**
 * A collection of values returned by getApplication.
 */
export interface GetApplicationResult {
    /**
     * The deploy name of the application.
     */
    readonly deployName: string;
    readonly filters?: outputs.GetApplicationFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The Marketplace ID for this application.
     */
    readonly imageId: string;
    /**
     * The name of the application.
     */
    readonly name: string;
    /**
     * The short name of the application.
     */
    readonly shortName: string;
    /**
     * This defines if an application is `one-click` or `marketplace` .
     */
    readonly type: string;
    /**
     * The vendor who authored the application.
     */
    readonly vendor: string;
}
/**
 * Get information about applications that can be launched when creating a Vultr VPS.
 *
 * ## Example Usage
 *
 * Get the information for an application by `deployName`:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const docker = vultr.getApplication({
 *     filters: [{
 *         name: "deploy_name",
 *         values: ["Docker on CentOS 7 x64"],
 *     }],
 * });
 * ```
 */
export function getApplicationOutput(args?: GetApplicationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetApplicationResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vultr:index/getApplication:getApplication", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getApplication.
 */
export interface GetApplicationOutputArgs {
    /**
     * Query parameters for finding applications.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetApplicationFilterArgs>[]>;
}
