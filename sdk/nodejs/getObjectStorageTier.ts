// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about Object Storage tiers on Vultr.
 *
 * ## Example Usage
 *
 * Get the information for an object storage tier by `slug`:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const obs_tier = vultr.getObjectStorageTier({
 *     filters: [{
 *         name: "slug",
 *         values: ["tier_010k_5000m"],
 *     }],
 * });
 * ```
 */
export function getObjectStorageTier(args?: GetObjectStorageTierArgs, opts?: pulumi.InvokeOptions): Promise<GetObjectStorageTierResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vultr:index/getObjectStorageTier:getObjectStorageTier", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getObjectStorageTier.
 */
export interface GetObjectStorageTierArgs {
    /**
     * Query parameters for finding operating systems.
     */
    filters?: inputs.GetObjectStorageTierFilter[];
}

/**
 * A collection of values returned by getObjectStorageTier.
 */
export interface GetObjectStorageTierResult {
    readonly filters?: outputs.GetObjectStorageTierFilter[];
    /**
     * The identifying tier ID.
     */
    readonly id: number;
    /**
     * A list of locations/clusters where the tier is available.
     */
    readonly locations: outputs.GetObjectStorageTierLocation[];
    /**
     * The monthly cost for the tier.
     */
    readonly price: number;
    /**
     * The byte-per-second rate limit in the tier.
     */
    readonly rateLimitBytes: number;
    /**
     * The operations-per-second rate limit in the tier.
     */
    readonly rateLimitOperations: number;
    /**
     * The unique name for the tier.
     */
    readonly slug: string;
}
/**
 * Get information about Object Storage tiers on Vultr.
 *
 * ## Example Usage
 *
 * Get the information for an object storage tier by `slug`:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const obs_tier = vultr.getObjectStorageTier({
 *     filters: [{
 *         name: "slug",
 *         values: ["tier_010k_5000m"],
 *     }],
 * });
 * ```
 */
export function getObjectStorageTierOutput(args?: GetObjectStorageTierOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetObjectStorageTierResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vultr:index/getObjectStorageTier:getObjectStorageTier", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getObjectStorageTier.
 */
export interface GetObjectStorageTierOutputArgs {
    /**
     * Query parameters for finding operating systems.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetObjectStorageTierFilterArgs>[]>;
}
