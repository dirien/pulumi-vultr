// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about an ISO file uploaded to your Vultr account.
 *
 * ## Example Usage
 *
 * Get the information for a ISO file by `filename`:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@pulumi/vultr";
 *
 * const myIso = vultr.getIsoPrivate({
 *     filters: [{
 *         name: "filename",
 *         values: ["my-iso-filename"],
 *     }],
 * });
 * ```
 */
export function getIsoPrivate(args?: GetIsoPrivateArgs, opts?: pulumi.InvokeOptions): Promise<GetIsoPrivateResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vultr:index/getIsoPrivate:getIsoPrivate", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getIsoPrivate.
 */
export interface GetIsoPrivateArgs {
    /**
     * Query parameters for finding ISO files.
     */
    filters?: inputs.GetIsoPrivateFilter[];
}

/**
 * A collection of values returned by getIsoPrivate.
 */
export interface GetIsoPrivateResult {
    /**
     * The date the ISO file was added to your Vultr account.
     */
    readonly dateCreated: string;
    /**
     * The ISO file's filename.
     */
    readonly filename: string;
    readonly filters?: outputs.GetIsoPrivateFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The md5 hash of the ISO file.
     */
    readonly md5sum: string;
    /**
     * The sha512 hash of the ISO file.
     */
    readonly sha512sum: string;
    /**
     * The size of the ISO file in bytes.
     */
    readonly size: number;
    /**
     * The status of the ISO file.
     */
    readonly status: string;
}
/**
 * Get information about an ISO file uploaded to your Vultr account.
 *
 * ## Example Usage
 *
 * Get the information for a ISO file by `filename`:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@pulumi/vultr";
 *
 * const myIso = vultr.getIsoPrivate({
 *     filters: [{
 *         name: "filename",
 *         values: ["my-iso-filename"],
 *     }],
 * });
 * ```
 */
export function getIsoPrivateOutput(args?: GetIsoPrivateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIsoPrivateResult> {
    return pulumi.output(args).apply((a: any) => getIsoPrivate(a, opts))
}

/**
 * A collection of arguments for invoking getIsoPrivate.
 */
export interface GetIsoPrivateOutputArgs {
    /**
     * Query parameters for finding ISO files.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetIsoPrivateFilterArgs>[]>;
}
