// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about operating systems that can be launched when creating a Vultr VPS.
 *
 * ## Example Usage
 *
 * Get the information for an operating system by `name`:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const centos = vultr.getOs({
 *     filters: [{
 *         name: "name",
 *         values: ["CentOS 7 x64"],
 *     }],
 * });
 * ```
 */
export function getOs(args?: GetOsArgs, opts?: pulumi.InvokeOptions): Promise<GetOsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vultr:index/getOs:getOs", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getOs.
 */
export interface GetOsArgs {
    /**
     * Query parameters for finding operating systems.
     */
    filters?: inputs.GetOsFilter[];
}

/**
 * A collection of values returned by getOs.
 */
export interface GetOsResult {
    /**
     * The architecture of the operating system.
     */
    readonly arch: string;
    /**
     * The family of the operating system.
     */
    readonly family: string;
    readonly filters?: outputs.GetOsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the operating system.
     */
    readonly name: string;
}
/**
 * Get information about operating systems that can be launched when creating a Vultr VPS.
 *
 * ## Example Usage
 *
 * Get the information for an operating system by `name`:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@ediri/vultr";
 *
 * const centos = vultr.getOs({
 *     filters: [{
 *         name: "name",
 *         values: ["CentOS 7 x64"],
 *     }],
 * });
 * ```
 */
export function getOsOutput(args?: GetOsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetOsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vultr:index/getOs:getOs", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getOs.
 */
export interface GetOsOutputArgs {
    /**
     * Query parameters for finding operating systems.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetOsFilterArgs>[]>;
}
