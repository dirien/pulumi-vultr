// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get information about a Vultr container registry.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@pulumi/vultr";
 *
 * const vcr-ds = vultr.getContainerRegistry({
 *     filters: [{
 *         name: "name",
 *         values: ["examplecontainerregistry"],
 *     }],
 * });
 * ```
 */
export function getContainerRegistry(args?: GetContainerRegistryArgs, opts?: pulumi.InvokeOptions): Promise<GetContainerRegistryResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("vultr:index/getContainerRegistry:getContainerRegistry", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getContainerRegistry.
 */
export interface GetContainerRegistryArgs {
    /**
     * Query parameters for finding the container registry.
     */
    filters?: inputs.GetContainerRegistryFilter[];
}

/**
 * A collection of values returned by getContainerRegistry.
 */
export interface GetContainerRegistryResult {
    /**
     * A date-time of when the root user was created.
     */
    readonly dateCreated: string;
    readonly filters?: outputs.GetContainerRegistryFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the repository.
     */
    readonly name: string;
    /**
     * Boolean indicating whether or not the requires login credentials.
     */
    readonly public: boolean;
    /**
     * Listing of the repositories created within the registry and their metadata.
     */
    readonly repositories: outputs.GetContainerRegistryRepository[];
    /**
     * The user associated with the container registry.
     */
    readonly rootUser: {[key: string]: string};
    /**
     * A listing of current storage usage relevant to the container registry.
     */
    readonly storage: {[key: string]: string};
    /**
     * The URN of the container registry.
     */
    readonly urn: string;
}
/**
 * Get information about a Vultr container registry.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as vultr from "@pulumi/vultr";
 *
 * const vcr-ds = vultr.getContainerRegistry({
 *     filters: [{
 *         name: "name",
 *         values: ["examplecontainerregistry"],
 *     }],
 * });
 * ```
 */
export function getContainerRegistryOutput(args?: GetContainerRegistryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetContainerRegistryResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("vultr:index/getContainerRegistry:getContainerRegistry", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getContainerRegistry.
 */
export interface GetContainerRegistryOutputArgs {
    /**
     * Query parameters for finding the container registry.
     */
    filters?: pulumi.Input<pulumi.Input<inputs.GetContainerRegistryFilterArgs>[]>;
}
