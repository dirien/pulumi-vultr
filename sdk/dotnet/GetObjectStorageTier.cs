// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Vultr
{
    public static class GetObjectStorageTier
    {
        /// <summary>
        /// Get information about Object Storage tiers on Vultr.
        /// 
        /// ## Example Usage
        /// 
        /// Get the information for an object storage tier by `slug`:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vultr = Pulumi.Vultr;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var obs_tier = Vultr.GetObjectStorageTier.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Vultr.Inputs.GetObjectStorageTierFilterInputArgs
        ///             {
        ///                 Name = "slug",
        ///                 Values = new[]
        ///                 {
        ///                     "tier_010k_5000m",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetObjectStorageTierResult> InvokeAsync(GetObjectStorageTierArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetObjectStorageTierResult>("vultr:index/getObjectStorageTier:getObjectStorageTier", args ?? new GetObjectStorageTierArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about Object Storage tiers on Vultr.
        /// 
        /// ## Example Usage
        /// 
        /// Get the information for an object storage tier by `slug`:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vultr = Pulumi.Vultr;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var obs_tier = Vultr.GetObjectStorageTier.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Vultr.Inputs.GetObjectStorageTierFilterInputArgs
        ///             {
        ///                 Name = "slug",
        ///                 Values = new[]
        ///                 {
        ///                     "tier_010k_5000m",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetObjectStorageTierResult> Invoke(GetObjectStorageTierInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetObjectStorageTierResult>("vultr:index/getObjectStorageTier:getObjectStorageTier", args ?? new GetObjectStorageTierInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about Object Storage tiers on Vultr.
        /// 
        /// ## Example Usage
        /// 
        /// Get the information for an object storage tier by `slug`:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vultr = Pulumi.Vultr;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var obs_tier = Vultr.GetObjectStorageTier.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Vultr.Inputs.GetObjectStorageTierFilterInputArgs
        ///             {
        ///                 Name = "slug",
        ///                 Values = new[]
        ///                 {
        ///                     "tier_010k_5000m",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetObjectStorageTierResult> Invoke(GetObjectStorageTierInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetObjectStorageTierResult>("vultr:index/getObjectStorageTier:getObjectStorageTier", args ?? new GetObjectStorageTierInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetObjectStorageTierArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetObjectStorageTierFilterArgs>? _filters;

        /// <summary>
        /// Query parameters for finding operating systems.
        /// </summary>
        public List<Inputs.GetObjectStorageTierFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetObjectStorageTierFilterArgs>());
            set => _filters = value;
        }

        public GetObjectStorageTierArgs()
        {
        }
        public static new GetObjectStorageTierArgs Empty => new GetObjectStorageTierArgs();
    }

    public sealed class GetObjectStorageTierInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetObjectStorageTierFilterInputArgs>? _filters;

        /// <summary>
        /// Query parameters for finding operating systems.
        /// </summary>
        public InputList<Inputs.GetObjectStorageTierFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetObjectStorageTierFilterInputArgs>());
            set => _filters = value;
        }

        public GetObjectStorageTierInvokeArgs()
        {
        }
        public static new GetObjectStorageTierInvokeArgs Empty => new GetObjectStorageTierInvokeArgs();
    }


    [OutputType]
    public sealed class GetObjectStorageTierResult
    {
        public readonly ImmutableArray<Outputs.GetObjectStorageTierFilterResult> Filters;
        /// <summary>
        /// The identifying tier ID.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// A list of locations/clusters where the tier is available.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetObjectStorageTierLocationResult> Locations;
        /// <summary>
        /// The monthly cost for the tier.
        /// </summary>
        public readonly int Price;
        /// <summary>
        /// The byte-per-second rate limit in the tier.
        /// </summary>
        public readonly int RateLimitBytes;
        /// <summary>
        /// The operations-per-second rate limit in the tier.
        /// </summary>
        public readonly int RateLimitOperations;
        /// <summary>
        /// The unique name for the tier.
        /// </summary>
        public readonly string Slug;

        [OutputConstructor]
        private GetObjectStorageTierResult(
            ImmutableArray<Outputs.GetObjectStorageTierFilterResult> filters,

            int id,

            ImmutableArray<Outputs.GetObjectStorageTierLocationResult> locations,

            int price,

            int rateLimitBytes,

            int rateLimitOperations,

            string slug)
        {
            Filters = filters;
            Id = id;
            Locations = locations;
            Price = price;
            RateLimitBytes = rateLimitBytes;
            RateLimitOperations = rateLimitOperations;
            Slug = slug;
        }
    }
}
