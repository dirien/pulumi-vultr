// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace dirien.Vultr
{
    /// <summary>
    /// Provides a Vultr Snapshots from URL resource. This can be used to create, read, modify, and delete Snapshots from URL.
    /// 
    /// ## Example Usage
    /// 
    /// Create a new Snapshots from URL
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Vultr = dirien.Vultr;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var mySnapshot = new Vultr.SnapshotFromUrl("mySnapshot", new()
    ///     {
    ///         Url = "http://dl-cdn.alpinelinux.org/alpine/v3.9/releases/x86_64/alpine-virt-3.9.1-x86_64.iso",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Snapshots from Url can be imported using the Snapshot `ID`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import vultr:index/snapshotFromUrl:SnapshotFromUrl my_snapshot e60dc0a2-9313-4bab-bffc-57ffe33d99f6
    /// ```
    /// </summary>
    [VultrResourceType("vultr:index/snapshotFromUrl:SnapshotFromUrl")]
    public partial class SnapshotFromUrl : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The app id which the snapshot is associated with.
        /// </summary>
        [Output("appId")]
        public Output<int> AppId { get; private set; } = null!;

        /// <summary>
        /// The date the snapshot was created.
        /// </summary>
        [Output("dateCreated")]
        public Output<string> DateCreated { get; private set; } = null!;

        /// <summary>
        /// The description for the given snapshot.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The os id which the snapshot is associated with.
        /// </summary>
        [Output("osId")]
        public Output<int> OsId { get; private set; } = null!;

        /// <summary>
        /// The size of the snapshot in Bytes.
        /// </summary>
        [Output("size")]
        public Output<int> Size { get; private set; } = null!;

        /// <summary>
        /// The status for the given snapshot.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// URL of the given resource you want to create a snapshot from.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a SnapshotFromUrl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SnapshotFromUrl(string name, SnapshotFromUrlArgs args, CustomResourceOptions? options = null)
            : base("vultr:index/snapshotFromUrl:SnapshotFromUrl", name, args ?? new SnapshotFromUrlArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SnapshotFromUrl(string name, Input<string> id, SnapshotFromUrlState? state = null, CustomResourceOptions? options = null)
            : base("vultr:index/snapshotFromUrl:SnapshotFromUrl", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-vultr",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SnapshotFromUrl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SnapshotFromUrl Get(string name, Input<string> id, SnapshotFromUrlState? state = null, CustomResourceOptions? options = null)
        {
            return new SnapshotFromUrl(name, id, state, options);
        }
    }

    public sealed class SnapshotFromUrlArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// URL of the given resource you want to create a snapshot from.
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public SnapshotFromUrlArgs()
        {
        }
        public static new SnapshotFromUrlArgs Empty => new SnapshotFromUrlArgs();
    }

    public sealed class SnapshotFromUrlState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The app id which the snapshot is associated with.
        /// </summary>
        [Input("appId")]
        public Input<int>? AppId { get; set; }

        /// <summary>
        /// The date the snapshot was created.
        /// </summary>
        [Input("dateCreated")]
        public Input<string>? DateCreated { get; set; }

        /// <summary>
        /// The description for the given snapshot.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The os id which the snapshot is associated with.
        /// </summary>
        [Input("osId")]
        public Input<int>? OsId { get; set; }

        /// <summary>
        /// The size of the snapshot in Bytes.
        /// </summary>
        [Input("size")]
        public Input<int>? Size { get; set; }

        /// <summary>
        /// The status for the given snapshot.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// URL of the given resource you want to create a snapshot from.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public SnapshotFromUrlState()
        {
        }
        public static new SnapshotFromUrlState Empty => new SnapshotFromUrlState();
    }
}
