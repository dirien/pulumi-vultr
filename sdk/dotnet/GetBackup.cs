// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Vultr
{
    public static class GetBackup
    {
        /// <summary>
        /// Get information about a Vultr backup. This data source provides a list of backups which contain the description, size, status, and the creation date for your Vultr backup.
        /// 
        /// ## Example Usage
        /// 
        /// Get the information for a backup by `description`:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vultr = Pulumi.Vultr;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myBackup = Vultr.GetBackup.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Vultr.Inputs.GetBackupFilterInputArgs
        ///             {
        ///                 Name = "description",
        ///                 Values = new[]
        ///                 {
        ///                     "my-backup-description",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBackupResult> InvokeAsync(GetBackupArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBackupResult>("vultr:index/getBackup:getBackup", args ?? new GetBackupArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Vultr backup. This data source provides a list of backups which contain the description, size, status, and the creation date for your Vultr backup.
        /// 
        /// ## Example Usage
        /// 
        /// Get the information for a backup by `description`:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vultr = Pulumi.Vultr;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myBackup = Vultr.GetBackup.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Vultr.Inputs.GetBackupFilterInputArgs
        ///             {
        ///                 Name = "description",
        ///                 Values = new[]
        ///                 {
        ///                     "my-backup-description",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBackupResult> Invoke(GetBackupInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupResult>("vultr:index/getBackup:getBackup", args ?? new GetBackupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackupArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetBackupFilterArgs>? _filters;

        /// <summary>
        /// Query parameters for finding backups.
        /// </summary>
        public List<Inputs.GetBackupFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetBackupFilterArgs>());
            set => _filters = value;
        }

        public GetBackupArgs()
        {
        }
        public static new GetBackupArgs Empty => new GetBackupArgs();
    }

    public sealed class GetBackupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetBackupFilterInputArgs>? _filters;

        /// <summary>
        /// Query parameters for finding backups.
        /// </summary>
        public InputList<Inputs.GetBackupFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetBackupFilterInputArgs>());
            set => _filters = value;
        }

        public GetBackupInvokeArgs()
        {
        }
        public static new GetBackupInvokeArgs Empty => new GetBackupInvokeArgs();
    }


    [OutputType]
    public sealed class GetBackupResult
    {
        public readonly ImmutableArray<ImmutableDictionary<string, string>> Backups;
        public readonly ImmutableArray<Outputs.GetBackupFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetBackupResult(
            ImmutableArray<ImmutableDictionary<string, string>> backups,

            ImmutableArray<Outputs.GetBackupFilterResult> filters,

            string id)
        {
            Backups = backups;
            Filters = filters;
            Id = id;
        }
    }
}
