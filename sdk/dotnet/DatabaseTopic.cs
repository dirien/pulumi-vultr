// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Vultr
{
    /// <summary>
    /// Provides a Vultr database topic resource. This can be used to create, read, modify, and delete topics for a managed database on your Vultr account.
    /// 
    /// ## Example Usage
    /// 
    /// Create a new database topic:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Vultr = ediri.Vultr;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myDatabaseTopic = new Vultr.DatabaseTopic("myDatabaseTopic", new()
    ///     {
    ///         DatabaseId = vultr_database.My_database.Id,
    ///         Name = "my_database_topic",
    ///         Partitions = 3,
    ///         Replication = 2,
    ///         RetentionHours = 120,
    ///         RetentionBytes = -1,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [VultrResourceType("vultr:index/databaseTopic:DatabaseTopic")]
    public partial class DatabaseTopic : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The managed database ID you want to attach this topic to.
        /// </summary>
        [Output("databaseId")]
        public Output<string> DatabaseId { get; private set; } = null!;

        /// <summary>
        /// The name for the new managed database topic.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The number of partitions for the new managed database topic.
        /// </summary>
        [Output("partitions")]
        public Output<int> Partitions { get; private set; } = null!;

        /// <summary>
        /// The replication factor for the new managed database topic.
        /// </summary>
        [Output("replication")]
        public Output<int> Replication { get; private set; } = null!;

        /// <summary>
        /// The retention bytes for the new managed database topic.
        /// </summary>
        [Output("retentionBytes")]
        public Output<int> RetentionBytes { get; private set; } = null!;

        /// <summary>
        /// The retention hours for the new managed database topic.
        /// </summary>
        [Output("retentionHours")]
        public Output<int> RetentionHours { get; private set; } = null!;


        /// <summary>
        /// Create a DatabaseTopic resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DatabaseTopic(string name, DatabaseTopicArgs args, CustomResourceOptions? options = null)
            : base("vultr:index/databaseTopic:DatabaseTopic", name, args ?? new DatabaseTopicArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DatabaseTopic(string name, Input<string> id, DatabaseTopicState? state = null, CustomResourceOptions? options = null)
            : base("vultr:index/databaseTopic:DatabaseTopic", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-vultr",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DatabaseTopic resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DatabaseTopic Get(string name, Input<string> id, DatabaseTopicState? state = null, CustomResourceOptions? options = null)
        {
            return new DatabaseTopic(name, id, state, options);
        }
    }

    public sealed class DatabaseTopicArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The managed database ID you want to attach this topic to.
        /// </summary>
        [Input("databaseId", required: true)]
        public Input<string> DatabaseId { get; set; } = null!;

        /// <summary>
        /// The name for the new managed database topic.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The number of partitions for the new managed database topic.
        /// </summary>
        [Input("partitions", required: true)]
        public Input<int> Partitions { get; set; } = null!;

        /// <summary>
        /// The replication factor for the new managed database topic.
        /// </summary>
        [Input("replication", required: true)]
        public Input<int> Replication { get; set; } = null!;

        /// <summary>
        /// The retention bytes for the new managed database topic.
        /// </summary>
        [Input("retentionBytes", required: true)]
        public Input<int> RetentionBytes { get; set; } = null!;

        /// <summary>
        /// The retention hours for the new managed database topic.
        /// </summary>
        [Input("retentionHours", required: true)]
        public Input<int> RetentionHours { get; set; } = null!;

        public DatabaseTopicArgs()
        {
        }
        public static new DatabaseTopicArgs Empty => new DatabaseTopicArgs();
    }

    public sealed class DatabaseTopicState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The managed database ID you want to attach this topic to.
        /// </summary>
        [Input("databaseId")]
        public Input<string>? DatabaseId { get; set; }

        /// <summary>
        /// The name for the new managed database topic.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The number of partitions for the new managed database topic.
        /// </summary>
        [Input("partitions")]
        public Input<int>? Partitions { get; set; }

        /// <summary>
        /// The replication factor for the new managed database topic.
        /// </summary>
        [Input("replication")]
        public Input<int>? Replication { get; set; }

        /// <summary>
        /// The retention bytes for the new managed database topic.
        /// </summary>
        [Input("retentionBytes")]
        public Input<int>? RetentionBytes { get; set; }

        /// <summary>
        /// The retention hours for the new managed database topic.
        /// </summary>
        [Input("retentionHours")]
        public Input<int>? RetentionHours { get; set; }

        public DatabaseTopicState()
        {
        }
        public static new DatabaseTopicState Empty => new DatabaseTopicState();
    }
}
