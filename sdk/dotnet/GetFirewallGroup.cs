// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace dirien.Vultr
{
    public static class GetFirewallGroup
    {
        /// <summary>
        /// Get information about a firewall group on your Vultr account.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Get the information for a firewall group by `description`:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Vultr = Pulumi.Vultr;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myFwg = Vultr.GetFirewallGroup.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Vultr.Inputs.GetFirewallGroupFilterInputArgs
        ///             {
        ///                 Name = "description",
        ///                 Values = new[]
        ///                 {
        ///                     "fwg-description",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetFirewallGroupResult> InvokeAsync(GetFirewallGroupArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFirewallGroupResult>("vultr:index/getFirewallGroup:getFirewallGroup", args ?? new GetFirewallGroupArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a firewall group on your Vultr account.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Get the information for a firewall group by `description`:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Vultr = Pulumi.Vultr;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myFwg = Vultr.GetFirewallGroup.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Vultr.Inputs.GetFirewallGroupFilterInputArgs
        ///             {
        ///                 Name = "description",
        ///                 Values = new[]
        ///                 {
        ///                     "fwg-description",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetFirewallGroupResult> Invoke(GetFirewallGroupInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFirewallGroupResult>("vultr:index/getFirewallGroup:getFirewallGroup", args ?? new GetFirewallGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFirewallGroupArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetFirewallGroupFilterArgs>? _filters;

        /// <summary>
        /// Query parameters for finding firewall groups.
        /// </summary>
        public List<Inputs.GetFirewallGroupFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetFirewallGroupFilterArgs>());
            set => _filters = value;
        }

        public GetFirewallGroupArgs()
        {
        }
        public static new GetFirewallGroupArgs Empty => new GetFirewallGroupArgs();
    }

    public sealed class GetFirewallGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetFirewallGroupFilterInputArgs>? _filters;

        /// <summary>
        /// Query parameters for finding firewall groups.
        /// </summary>
        public InputList<Inputs.GetFirewallGroupFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetFirewallGroupFilterInputArgs>());
            set => _filters = value;
        }

        public GetFirewallGroupInvokeArgs()
        {
        }
        public static new GetFirewallGroupInvokeArgs Empty => new GetFirewallGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetFirewallGroupResult
    {
        /// <summary>
        /// The date the firewall group was added to your Vultr account.
        /// </summary>
        public readonly string DateCreated;
        /// <summary>
        /// The date the firewall group was last modified.
        /// </summary>
        public readonly string DateModified;
        /// <summary>
        /// The description of the firewall group.
        /// </summary>
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetFirewallGroupFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The number of instances this firewall group is applied to.
        /// </summary>
        public readonly int InstanceCount;
        /// <summary>
        /// The maximum number of rules this firewall group can have.
        /// </summary>
        public readonly int MaxRuleCount;
        /// <summary>
        /// The number of rules added to this firewall group.
        /// </summary>
        public readonly int RuleCount;

        [OutputConstructor]
        private GetFirewallGroupResult(
            string dateCreated,

            string dateModified,

            string description,

            ImmutableArray<Outputs.GetFirewallGroupFilterResult> filters,

            string id,

            int instanceCount,

            int maxRuleCount,

            int ruleCount)
        {
            DateCreated = dateCreated;
            DateModified = dateModified;
            Description = description;
            Filters = filters;
            Id = id;
            InstanceCount = instanceCount;
            MaxRuleCount = maxRuleCount;
            RuleCount = ruleCount;
        }
    }
}
