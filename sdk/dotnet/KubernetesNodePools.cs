// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Vultr
{
    /// <summary>
    /// Deploy additional node pools to an existing Vultr Kubernetes Engine (VKE) cluster.
    /// 
    /// ## Example Usage
    /// 
    /// Create a new VKE cluster:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Vultr = ediri.Vultr;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var np_1 = new Vultr.KubernetesNodePools("np-1", new()
    ///     {
    ///         ClusterId = vultr_kubernetes.K8.Id,
    ///         NodeQuantity = 1,
    ///         Plan = "vc2-2c-4gb",
    ///         Label = "my-label",
    ///         Tag = "my-tag",
    ///         AutoScaler = true,
    ///         MinNodes = 1,
    ///         MaxNodes = 2,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [VultrResourceType("vultr:index/kubernetesNodePools:KubernetesNodePools")]
    public partial class KubernetesNodePools : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Enable the auto scaler for the default node pool.
        /// </summary>
        [Output("autoScaler")]
        public Output<bool?> AutoScaler { get; private set; } = null!;

        /// <summary>
        /// The VKE cluster ID you want to attach this nodepool to.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// Date node was created.
        /// </summary>
        [Output("dateCreated")]
        public Output<string> DateCreated { get; private set; } = null!;

        /// <summary>
        /// Date of node pool updates.
        /// </summary>
        [Output("dateUpdated")]
        public Output<string> DateUpdated { get; private set; } = null!;

        /// <summary>
        /// The label to be used as a prefix for nodes in this node pool.
        /// </summary>
        [Output("label")]
        public Output<string> Label { get; private set; } = null!;

        /// <summary>
        /// The maximum number of nodes to use with the auto scaler.
        /// </summary>
        [Output("maxNodes")]
        public Output<int?> MaxNodes { get; private set; } = null!;

        /// <summary>
        /// The minimum number of nodes to use with the auto scaler.
        /// </summary>
        [Output("minNodes")]
        public Output<int?> MinNodes { get; private set; } = null!;

        /// <summary>
        /// The number of nodes in this node pool.
        /// </summary>
        [Output("nodeQuantity")]
        public Output<int> NodeQuantity { get; private set; } = null!;

        /// <summary>
        /// Array that contains information about nodes within this node pool.
        /// </summary>
        [Output("nodes")]
        public Output<ImmutableArray<Outputs.KubernetesNodePoolsNode>> Nodes { get; private set; } = null!;

        /// <summary>
        /// The plan to be used in this node pool. [See Plans List](https://www.vultr.com/api/#operation/list-plans) Note the minimum plan requirements must have at least 1 core and 2 gbs of memory.
        /// </summary>
        [Output("plan")]
        public Output<string> Plan { get; private set; } = null!;

        /// <summary>
        /// Status of node.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// A tag that is assigned to this node pool.
        /// </summary>
        [Output("tag")]
        public Output<string?> Tag { get; private set; } = null!;


        /// <summary>
        /// Create a KubernetesNodePools resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KubernetesNodePools(string name, KubernetesNodePoolsArgs args, CustomResourceOptions? options = null)
            : base("vultr:index/kubernetesNodePools:KubernetesNodePools", name, args ?? new KubernetesNodePoolsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KubernetesNodePools(string name, Input<string> id, KubernetesNodePoolsState? state = null, CustomResourceOptions? options = null)
            : base("vultr:index/kubernetesNodePools:KubernetesNodePools", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-vultr",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KubernetesNodePools resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KubernetesNodePools Get(string name, Input<string> id, KubernetesNodePoolsState? state = null, CustomResourceOptions? options = null)
        {
            return new KubernetesNodePools(name, id, state, options);
        }
    }

    public sealed class KubernetesNodePoolsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable the auto scaler for the default node pool.
        /// </summary>
        [Input("autoScaler")]
        public Input<bool>? AutoScaler { get; set; }

        /// <summary>
        /// The VKE cluster ID you want to attach this nodepool to.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The label to be used as a prefix for nodes in this node pool.
        /// </summary>
        [Input("label", required: true)]
        public Input<string> Label { get; set; } = null!;

        /// <summary>
        /// The maximum number of nodes to use with the auto scaler.
        /// </summary>
        [Input("maxNodes")]
        public Input<int>? MaxNodes { get; set; }

        /// <summary>
        /// The minimum number of nodes to use with the auto scaler.
        /// </summary>
        [Input("minNodes")]
        public Input<int>? MinNodes { get; set; }

        /// <summary>
        /// The number of nodes in this node pool.
        /// </summary>
        [Input("nodeQuantity", required: true)]
        public Input<int> NodeQuantity { get; set; } = null!;

        /// <summary>
        /// The plan to be used in this node pool. [See Plans List](https://www.vultr.com/api/#operation/list-plans) Note the minimum plan requirements must have at least 1 core and 2 gbs of memory.
        /// </summary>
        [Input("plan", required: true)]
        public Input<string> Plan { get; set; } = null!;

        /// <summary>
        /// A tag that is assigned to this node pool.
        /// </summary>
        [Input("tag")]
        public Input<string>? Tag { get; set; }

        public KubernetesNodePoolsArgs()
        {
        }
        public static new KubernetesNodePoolsArgs Empty => new KubernetesNodePoolsArgs();
    }

    public sealed class KubernetesNodePoolsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable the auto scaler for the default node pool.
        /// </summary>
        [Input("autoScaler")]
        public Input<bool>? AutoScaler { get; set; }

        /// <summary>
        /// The VKE cluster ID you want to attach this nodepool to.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Date node was created.
        /// </summary>
        [Input("dateCreated")]
        public Input<string>? DateCreated { get; set; }

        /// <summary>
        /// Date of node pool updates.
        /// </summary>
        [Input("dateUpdated")]
        public Input<string>? DateUpdated { get; set; }

        /// <summary>
        /// The label to be used as a prefix for nodes in this node pool.
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        /// <summary>
        /// The maximum number of nodes to use with the auto scaler.
        /// </summary>
        [Input("maxNodes")]
        public Input<int>? MaxNodes { get; set; }

        /// <summary>
        /// The minimum number of nodes to use with the auto scaler.
        /// </summary>
        [Input("minNodes")]
        public Input<int>? MinNodes { get; set; }

        /// <summary>
        /// The number of nodes in this node pool.
        /// </summary>
        [Input("nodeQuantity")]
        public Input<int>? NodeQuantity { get; set; }

        [Input("nodes")]
        private InputList<Inputs.KubernetesNodePoolsNodeGetArgs>? _nodes;

        /// <summary>
        /// Array that contains information about nodes within this node pool.
        /// </summary>
        public InputList<Inputs.KubernetesNodePoolsNodeGetArgs> Nodes
        {
            get => _nodes ?? (_nodes = new InputList<Inputs.KubernetesNodePoolsNodeGetArgs>());
            set => _nodes = value;
        }

        /// <summary>
        /// The plan to be used in this node pool. [See Plans List](https://www.vultr.com/api/#operation/list-plans) Note the minimum plan requirements must have at least 1 core and 2 gbs of memory.
        /// </summary>
        [Input("plan")]
        public Input<string>? Plan { get; set; }

        /// <summary>
        /// Status of node.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// A tag that is assigned to this node pool.
        /// </summary>
        [Input("tag")]
        public Input<string>? Tag { get; set; }

        public KubernetesNodePoolsState()
        {
        }
        public static new KubernetesNodePoolsState Empty => new KubernetesNodePoolsState();
    }
}
