// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Vultr
{
    public static class GetVpc2
    {
        /// <summary>
        /// Get information about a Vultr VPC 2.0.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Get the information for a VPC 2.0 by `description`:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vultr = Pulumi.Vultr;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myVpc2 = Vultr.GetVpc2.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Vultr.Inputs.GetVpc2FilterInputArgs
        ///             {
        ///                 Name = "description",
        ///                 Values = new[]
        ///                 {
        ///                     "my-vpc2-description",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetVpc2Result> InvokeAsync(GetVpc2Args? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVpc2Result>("vultr:index/getVpc2:getVpc2", args ?? new GetVpc2Args(), options.WithDefaults());

        /// <summary>
        /// Get information about a Vultr VPC 2.0.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Get the information for a VPC 2.0 by `description`:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vultr = Pulumi.Vultr;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myVpc2 = Vultr.GetVpc2.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Vultr.Inputs.GetVpc2FilterInputArgs
        ///             {
        ///                 Name = "description",
        ///                 Values = new[]
        ///                 {
        ///                     "my-vpc2-description",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetVpc2Result> Invoke(GetVpc2InvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVpc2Result>("vultr:index/getVpc2:getVpc2", args ?? new GetVpc2InvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVpc2Args : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetVpc2FilterArgs>? _filters;

        /// <summary>
        /// Query parameters for finding VPCs 2.0.
        /// </summary>
        public List<Inputs.GetVpc2FilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetVpc2FilterArgs>());
            set => _filters = value;
        }

        public GetVpc2Args()
        {
        }
        public static new GetVpc2Args Empty => new GetVpc2Args();
    }

    public sealed class GetVpc2InvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetVpc2FilterInputArgs>? _filters;

        /// <summary>
        /// Query parameters for finding VPCs 2.0.
        /// </summary>
        public InputList<Inputs.GetVpc2FilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetVpc2FilterInputArgs>());
            set => _filters = value;
        }

        public GetVpc2InvokeArgs()
        {
        }
        public static new GetVpc2InvokeArgs Empty => new GetVpc2InvokeArgs();
    }


    [OutputType]
    public sealed class GetVpc2Result
    {
        /// <summary>
        /// The date the VPC 2.0 was added to your Vultr account.
        /// </summary>
        public readonly string DateCreated;
        /// <summary>
        /// The VPC 2.0's description.
        /// </summary>
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetVpc2FilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The IPv4 network address. For example: 10.1.1.0.
        /// </summary>
        public readonly string IpBlock;
        /// <summary>
        /// The number of bits for the netmask in CIDR notation. Example: 20
        /// </summary>
        public readonly int PrefixLength;
        /// <summary>
        /// The ID of the region that the VPC 2.0 is in.
        /// </summary>
        public readonly string Region;

        [OutputConstructor]
        private GetVpc2Result(
            string dateCreated,

            string description,

            ImmutableArray<Outputs.GetVpc2FilterResult> filters,

            string id,

            string ipBlock,

            int prefixLength,

            string region)
        {
            DateCreated = dateCreated;
            Description = description;
            Filters = filters;
            Id = id;
            IpBlock = ipBlock;
            PrefixLength = prefixLength;
            Region = region;
        }
    }
}
