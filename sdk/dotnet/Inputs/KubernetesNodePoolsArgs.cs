// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Vultr.Inputs
{

    public sealed class KubernetesNodePoolsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enable the auto scaler for the default node pool.
        /// </summary>
        [Input("autoScaler")]
        public Input<bool>? AutoScaler { get; set; }

        /// <summary>
        /// Date node was created.
        /// </summary>
        [Input("dateCreated")]
        public Input<string>? DateCreated { get; set; }

        /// <summary>
        /// Date of node pool updates.
        /// </summary>
        [Input("dateUpdated")]
        public Input<string>? DateUpdated { get; set; }

        /// <summary>
        /// ID of node.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// The label to be used as a prefix for nodes in this node pool.
        /// </summary>
        [Input("label", required: true)]
        public Input<string> Label { get; set; } = null!;

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A map of key/value pairs for Kubernetes node labels.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The maximum number of nodes to use with the auto scaler.
        /// </summary>
        [Input("maxNodes")]
        public Input<int>? MaxNodes { get; set; }

        /// <summary>
        /// The minimum number of nodes to use with the auto scaler.
        /// </summary>
        [Input("minNodes")]
        public Input<int>? MinNodes { get; set; }

        /// <summary>
        /// The number of nodes in this node pool.
        /// </summary>
        [Input("nodeQuantity", required: true)]
        public Input<int> NodeQuantity { get; set; } = null!;

        [Input("nodes")]
        private InputList<Inputs.KubernetesNodePoolsNodeArgs>? _nodes;

        /// <summary>
        /// Array that contains information about nodes within this node pool.
        /// </summary>
        public InputList<Inputs.KubernetesNodePoolsNodeArgs> Nodes
        {
            get => _nodes ?? (_nodes = new InputList<Inputs.KubernetesNodePoolsNodeArgs>());
            set => _nodes = value;
        }

        /// <summary>
        /// The plan to be used in this node pool. [See Plans List](https://www.vultr.com/api/#operation/list-plans) Note the minimum plan requirements must have at least 1 core and 2 gbs of memory.
        /// </summary>
        [Input("plan", required: true)]
        public Input<string> Plan { get; set; } = null!;

        /// <summary>
        /// Status of node.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Tag for node pool.
        /// </summary>
        [Input("tag")]
        public Input<string>? Tag { get; set; }

        [Input("taints")]
        private InputList<Inputs.KubernetesNodePoolsTaintArgs>? _taints;

        /// <summary>
        /// Taints to apply to the nodes in the node pool. Should contain `key`, `value` and `effect`.  The `effect` should be one of `NoSchedule`, `PreferNoSchedule` or `NoExecute`.
        /// </summary>
        public InputList<Inputs.KubernetesNodePoolsTaintArgs> Taints
        {
            get => _taints ?? (_taints = new InputList<Inputs.KubernetesNodePoolsTaintArgs>());
            set => _taints = value;
        }

        public KubernetesNodePoolsArgs()
        {
        }
        public static new KubernetesNodePoolsArgs Empty => new KubernetesNodePoolsArgs();
    }
}
