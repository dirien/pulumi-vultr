// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Vultr
{
    [VultrResourceType("vultr:index/databaseReplica:DatabaseReplica")]
    public partial class DatabaseReplica : global::Pulumi.CustomResource
    {
        [Output("clusterTimeZone")]
        public Output<string> ClusterTimeZone { get; private set; } = null!;

        [Output("databaseEngine")]
        public Output<string> DatabaseEngine { get; private set; } = null!;

        [Output("databaseEngineVersion")]
        public Output<string> DatabaseEngineVersion { get; private set; } = null!;

        [Output("databaseId")]
        public Output<string> DatabaseId { get; private set; } = null!;

        [Output("dateCreated")]
        public Output<string> DateCreated { get; private set; } = null!;

        [Output("dbname")]
        public Output<string> Dbname { get; private set; } = null!;

        [Output("host")]
        public Output<string> Host { get; private set; } = null!;

        [Output("label")]
        public Output<string> Label { get; private set; } = null!;

        [Output("latestBackup")]
        public Output<string> LatestBackup { get; private set; } = null!;

        [Output("maintenanceDow")]
        public Output<string> MaintenanceDow { get; private set; } = null!;

        [Output("maintenanceTime")]
        public Output<string> MaintenanceTime { get; private set; } = null!;

        [Output("mysqlLongQueryTime")]
        public Output<int> MysqlLongQueryTime { get; private set; } = null!;

        [Output("mysqlRequirePrimaryKey")]
        public Output<bool> MysqlRequirePrimaryKey { get; private set; } = null!;

        [Output("mysqlSlowQueryLog")]
        public Output<bool> MysqlSlowQueryLog { get; private set; } = null!;

        [Output("mysqlSqlModes")]
        public Output<ImmutableArray<string>> MysqlSqlModes { get; private set; } = null!;

        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        [Output("plan")]
        public Output<string> Plan { get; private set; } = null!;

        [Output("planDisk")]
        public Output<int> PlanDisk { get; private set; } = null!;

        [Output("planRam")]
        public Output<int> PlanRam { get; private set; } = null!;

        [Output("planReplicas")]
        public Output<int> PlanReplicas { get; private set; } = null!;

        [Output("planVcpus")]
        public Output<int> PlanVcpus { get; private set; } = null!;

        [Output("port")]
        public Output<string> Port { get; private set; } = null!;

        [Output("redisEvictionPolicy")]
        public Output<string> RedisEvictionPolicy { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        [Output("tag")]
        public Output<string> Tag { get; private set; } = null!;

        [Output("trustedIps")]
        public Output<ImmutableArray<string>> TrustedIps { get; private set; } = null!;

        [Output("user")]
        public Output<string> User { get; private set; } = null!;


        /// <summary>
        /// Create a DatabaseReplica resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DatabaseReplica(string name, DatabaseReplicaArgs args, CustomResourceOptions? options = null)
            : base("vultr:index/databaseReplica:DatabaseReplica", name, args ?? new DatabaseReplicaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DatabaseReplica(string name, Input<string> id, DatabaseReplicaState? state = null, CustomResourceOptions? options = null)
            : base("vultr:index/databaseReplica:DatabaseReplica", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/dirien/pulumi-vultr",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DatabaseReplica resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DatabaseReplica Get(string name, Input<string> id, DatabaseReplicaState? state = null, CustomResourceOptions? options = null)
        {
            return new DatabaseReplica(name, id, state, options);
        }
    }

    public sealed class DatabaseReplicaArgs : global::Pulumi.ResourceArgs
    {
        [Input("databaseId", required: true)]
        public Input<string> DatabaseId { get; set; } = null!;

        [Input("label", required: true)]
        public Input<string> Label { get; set; } = null!;

        [Input("mysqlLongQueryTime")]
        public Input<int>? MysqlLongQueryTime { get; set; }

        [Input("mysqlRequirePrimaryKey")]
        public Input<bool>? MysqlRequirePrimaryKey { get; set; }

        [Input("mysqlSlowQueryLog")]
        public Input<bool>? MysqlSlowQueryLog { get; set; }

        [Input("mysqlSqlModes")]
        private InputList<string>? _mysqlSqlModes;
        public InputList<string> MysqlSqlModes
        {
            get => _mysqlSqlModes ?? (_mysqlSqlModes = new InputList<string>());
            set => _mysqlSqlModes = value;
        }

        [Input("planDisk")]
        public Input<int>? PlanDisk { get; set; }

        [Input("redisEvictionPolicy")]
        public Input<string>? RedisEvictionPolicy { get; set; }

        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        [Input("tag")]
        public Input<string>? Tag { get; set; }

        [Input("trustedIps")]
        private InputList<string>? _trustedIps;
        public InputList<string> TrustedIps
        {
            get => _trustedIps ?? (_trustedIps = new InputList<string>());
            set => _trustedIps = value;
        }

        public DatabaseReplicaArgs()
        {
        }
        public static new DatabaseReplicaArgs Empty => new DatabaseReplicaArgs();
    }

    public sealed class DatabaseReplicaState : global::Pulumi.ResourceArgs
    {
        [Input("clusterTimeZone")]
        public Input<string>? ClusterTimeZone { get; set; }

        [Input("databaseEngine")]
        public Input<string>? DatabaseEngine { get; set; }

        [Input("databaseEngineVersion")]
        public Input<string>? DatabaseEngineVersion { get; set; }

        [Input("databaseId")]
        public Input<string>? DatabaseId { get; set; }

        [Input("dateCreated")]
        public Input<string>? DateCreated { get; set; }

        [Input("dbname")]
        public Input<string>? Dbname { get; set; }

        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("label")]
        public Input<string>? Label { get; set; }

        [Input("latestBackup")]
        public Input<string>? LatestBackup { get; set; }

        [Input("maintenanceDow")]
        public Input<string>? MaintenanceDow { get; set; }

        [Input("maintenanceTime")]
        public Input<string>? MaintenanceTime { get; set; }

        [Input("mysqlLongQueryTime")]
        public Input<int>? MysqlLongQueryTime { get; set; }

        [Input("mysqlRequirePrimaryKey")]
        public Input<bool>? MysqlRequirePrimaryKey { get; set; }

        [Input("mysqlSlowQueryLog")]
        public Input<bool>? MysqlSlowQueryLog { get; set; }

        [Input("mysqlSqlModes")]
        private InputList<string>? _mysqlSqlModes;
        public InputList<string> MysqlSqlModes
        {
            get => _mysqlSqlModes ?? (_mysqlSqlModes = new InputList<string>());
            set => _mysqlSqlModes = value;
        }

        [Input("password")]
        public Input<string>? Password { get; set; }

        [Input("plan")]
        public Input<string>? Plan { get; set; }

        [Input("planDisk")]
        public Input<int>? PlanDisk { get; set; }

        [Input("planRam")]
        public Input<int>? PlanRam { get; set; }

        [Input("planReplicas")]
        public Input<int>? PlanReplicas { get; set; }

        [Input("planVcpus")]
        public Input<int>? PlanVcpus { get; set; }

        [Input("port")]
        public Input<string>? Port { get; set; }

        [Input("redisEvictionPolicy")]
        public Input<string>? RedisEvictionPolicy { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tag")]
        public Input<string>? Tag { get; set; }

        [Input("trustedIps")]
        private InputList<string>? _trustedIps;
        public InputList<string> TrustedIps
        {
            get => _trustedIps ?? (_trustedIps = new InputList<string>());
            set => _trustedIps = value;
        }

        [Input("user")]
        public Input<string>? User { get; set; }

        public DatabaseReplicaState()
        {
        }
        public static new DatabaseReplicaState Empty => new DatabaseReplicaState();
    }
}
