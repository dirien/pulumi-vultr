// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace ediri.Vultr
{
    public static class GetIsoPublic
    {
        /// <summary>
        /// Get information about an ISO file offered in the Vultr ISO library.
        /// 
        /// ## Example Usage
        /// 
        /// Get the information for a ISO file by `description`:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vultr = Pulumi.Vultr;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myIso = Vultr.GetIsoPublic.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Vultr.Inputs.GetIsoPublicFilterInputArgs
        ///             {
        ///                 Name = "description",
        ///                 Values = new[]
        ///                 {
        ///                     "iso-description",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetIsoPublicResult> InvokeAsync(GetIsoPublicArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIsoPublicResult>("vultr:index/getIsoPublic:getIsoPublic", args ?? new GetIsoPublicArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about an ISO file offered in the Vultr ISO library.
        /// 
        /// ## Example Usage
        /// 
        /// Get the information for a ISO file by `description`:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Vultr = Pulumi.Vultr;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myIso = Vultr.GetIsoPublic.Invoke(new()
        ///     {
        ///         Filters = new[]
        ///         {
        ///             new Vultr.Inputs.GetIsoPublicFilterInputArgs
        ///             {
        ///                 Name = "description",
        ///                 Values = new[]
        ///                 {
        ///                     "iso-description",
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetIsoPublicResult> Invoke(GetIsoPublicInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIsoPublicResult>("vultr:index/getIsoPublic:getIsoPublic", args ?? new GetIsoPublicInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIsoPublicArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetIsoPublicFilterArgs>? _filters;

        /// <summary>
        /// Query parameters for finding ISO files.
        /// </summary>
        public List<Inputs.GetIsoPublicFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetIsoPublicFilterArgs>());
            set => _filters = value;
        }

        public GetIsoPublicArgs()
        {
        }
        public static new GetIsoPublicArgs Empty => new GetIsoPublicArgs();
    }

    public sealed class GetIsoPublicInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetIsoPublicFilterInputArgs>? _filters;

        /// <summary>
        /// Query parameters for finding ISO files.
        /// </summary>
        public InputList<Inputs.GetIsoPublicFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetIsoPublicFilterInputArgs>());
            set => _filters = value;
        }

        public GetIsoPublicInvokeArgs()
        {
        }
        public static new GetIsoPublicInvokeArgs Empty => new GetIsoPublicInvokeArgs();
    }


    [OutputType]
    public sealed class GetIsoPublicResult
    {
        /// <summary>
        /// The description of the ISO file.
        /// </summary>
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetIsoPublicFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The MD5Sum of the ISO file.
        /// </summary>
        public readonly string Md5sum;
        /// <summary>
        /// The ISO file's name.
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetIsoPublicResult(
            string description,

            ImmutableArray<Outputs.GetIsoPublicFilterResult> filters,

            string id,

            string md5sum,

            string name)
        {
            Description = description;
            Filters = filters;
            Id = id;
            Md5sum = md5sum;
            Name = name;
        }
    }
}
